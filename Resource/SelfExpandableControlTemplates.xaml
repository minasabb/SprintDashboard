<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom_Control="clr-namespace:TextDashboard.Custom_Control"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Converter="clr-namespace:TextDashboard.Converter" xmlns:Resource="clr-namespace:TextDashboard.Resource"
    mc:Ignorable="d">

    <!-- Border Style -->
    <Style
        x:Key="SimpleBorderStyle"
        TargetType="{x:Type Border}">
        <Style.Resources>
            <Storyboard
                x:Key="StoryboardFocus">
                <ColorAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                    Storyboard.TargetName="{x:Null}">
                    <EasingColorKeyFrame
                        KeyTime="0"
                        Value="#FFBDBCBC" />
                    <EasingColorKeyFrame
                        KeyTime="0:0:0.1"
                        Value="#FF5A5A5A" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
                x:Key="StoryboardLostFocus">
                <ColorAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                    Storyboard.TargetName="{x:Null}">
                    <EasingColorKeyFrame
                        KeyTime="0"
                        Value="#FF5A5A5A" />
                    <EasingColorKeyFrame
                        KeyTime="0:0:0.1"
                        Value="#FFBDBCBC" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
                x:Key="StoryboardMouseEnter">
                <ColorAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                    Storyboard.TargetName="{x:Null}">
                    <EasingColorKeyFrame
                        KeyTime="0"
                        Value="#FFBDBCBC" />
                    <EasingColorKeyFrame
                        KeyTime="0:0:0.1"
                        Value="#FF949494" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
                x:Key="StoryboardMouseLeave">
                <ColorAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                    Storyboard.TargetName="{x:Null}">
                    <EasingColorKeyFrame
                        KeyTime="0"
                        Value="#FF949494" />
                    <EasingColorKeyFrame
                        KeyTime="0:0:0.1"
                        Value="#FFBDBCBC" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>
        <Style.Triggers>
            <EventTrigger
                RoutedEvent="FocusManager.GotFocus">
                <BeginStoryboard
                    x:Name="StoryboardFocus_BeginStoryboard"
                    Storyboard="{StaticResource StoryboardFocus}" />
            </EventTrigger>
            <EventTrigger
                RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard
                    x:Name="StoryboardMouseEnter_BeginStoryboard"
                    Storyboard="{StaticResource StoryboardMouseEnter}" />
            </EventTrigger>
            <EventTrigger
                RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard
                    x:Name="StoryboardMouseLeave_BeginStoryboard"
                    Storyboard="{StaticResource StoryboardMouseLeave}" />
            </EventTrigger>
            <EventTrigger
                RoutedEvent="FocusManager.LostFocus">
                <BeginStoryboard
                    x:Name="StoryboardLostFocus_BeginStoryboard"
                    Storyboard="{StaticResource StoryboardLostFocus}" />
            </EventTrigger>
        </Style.Triggers>
        <Setter
            Property="CornerRadius"
            Value="3" />
        <Setter
            Property="Padding"
            Value="0" />
        <Setter
            Property="Margin"
            Value="0" />
        <Setter
            Property="Background"
            Value="White" />
        <Setter
            Property="BorderBrush"
            Value="#FFBDBCBC" />
        <Setter
            Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    Direction="330"
                    Color="#FFA8A8A9"
                    ShadowDepth="1"
                    BlurRadius="5" />
            </Setter.Value>
        </Setter>
        <Setter
            Property="BorderThickness"
            Value="0.5" />
    </Style>

    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeThickness="1"
                        StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush
        x:Key="ButtonNormalBackground"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#F3F3F3"
            Offset="0" />
        <GradientStop
            Color="#EBEBEB"
            Offset="0.344" />
        <GradientStop
            Color="#DDDDDD"
            Offset="0.74" />
        <GradientStop
            Color="#FFA7A1A1"
            Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush
        x:Key="PrimaryActionButtonBackground"
        EndPoint="0.5,0"
        StartPoint="0.5,1">
        <GradientStop
            Color="#FFF9D00D"
            Offset="0" />
        <GradientStop
            Color="#FFF9D00D"
            Offset="0.30000299215316772" />
        <GradientStop
            Color="#FFFBE828"
            Offset="0.80000299215316772" />
        <GradientStop
            Color="#FFFBE828"
            Offset="1" />
    </LinearGradientBrush>
    
    <SolidColorBrush
        x:Key="ButtonNormalBorder"
        Color="#FF707070" />
    <Style
        x:Key="DashboardButtonStyle"
        TargetType="{x:Type Button}">
        <Setter
            Property="FontFamily"
            Value="Segoe UI" />
        <Setter
            Property="Foreground"
            Value="Gray" />
        <Setter
            Property="FontSize"
            Value="18" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource ButtonFocusVisual}" />
        <Setter
            Property="Background"
            Value="{Binding Path=TileBackgroundColor, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ButtonNormalBorder}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="Padding"
            Value="1" />
        <Setter
            Property="Margin"
            Value="0" />
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        Margin="0">
                        <ContentPresenter
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            OpacityMask="White" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                Value="{StaticResource ButtonNormalBackground}" />
                            <Setter
                                Property="Foreground"
                                Value="#FF5A5A5A" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate
        x:Key="SelfExpandableControlTemplate"
        TargetType="{x:Type Custom_Control:SelfExpandableControl}">
        <Border
            Padding="{TemplateBinding Margin}">
            <Border 
                Background="White"
                BorderThickness="1"
                BorderBrush="LightGray">
                <ScrollViewer
                    x:Name="PART_MainScrolViewer"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden">

                    <Grid
                        x:Name="PART_MainGrid">
                        <Button
                            x:Name="PART_Tile"
                            Margin="0"
                            Width="{TemplateBinding MinWidth}"
                            Height="{TemplateBinding MinHeight}"
                            Style="{StaticResource DashboardButtonStyle}">

                            <Button.Visibility>
                                <TemplateBinding
                                    Property="State"
                                    Converter="{x:Static Converter:StateToVisibilityConverter.Instance}">

                                    <TemplateBinding.ConverterParameter>
                                        <x:Array
                                            Type="{x:Type Custom_Control:State}">
                                            <Custom_Control:State>Normal</Custom_Control:State>
                                            <Custom_Control:State>Deactivated</Custom_Control:State>
                                        </x:Array>
                                    </TemplateBinding.ConverterParameter>

                                </TemplateBinding>
                            </Button.Visibility>
                            <Grid
                                Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition
                                        Height="*" />
                                    <RowDefinition 
                                        Height="Auto" />             
                                </Grid.RowDefinitions>
                                <Image
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Width="{Binding Path=TileIconSize, RelativeSource={RelativeSource TemplatedParent}}"
                                    Height="{Binding Path=TileIconSize, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0,0,0,10"
                                    Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock 
                                    Grid.Row="1"
                                    VerticalAlignment="Bottom"
                                    HorizontalAlignment="Left"
                                    TextWrapping="Wrap"
                                    MaxWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                    MaxHeight="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                    Text="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Button>
                        <ContentPresenter
                            Margin="5"
                            x:Name="PART_ContentPresenter"
                            Content="{TemplateBinding Content}">
                            <ContentPresenter.Visibility>
                                <TemplateBinding
                                    Property="State"
                                    Converter="{x:Static Converter:StateToVisibilityConverter.Instance}">
                                    <TemplateBinding.ConverterParameter>
                                        <x:Array
                                            Type="{x:Type Custom_Control:State}">
                                            <Custom_Control:State>Activated</Custom_Control:State>
                                        </x:Array>
                                    </TemplateBinding.ConverterParameter>
                                </TemplateBinding>
                            </ContentPresenter.Visibility>
                        </ContentPresenter>
                    </Grid>
                </ScrollViewer>
            </Border>
        </Border>
    </ControlTemplate>

    <!--<Style
        x:Key="SelfExpandableControlStyle"
        TargetType="{x:Type Custom_Control:SelfExpandableControl}">
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="Template"
            Value="{DynamicResource SelfExpandableControlTemplate}" />

    </Style>-->

</ResourceDictionary>