<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IQ.Framework</name>
    </assembly>
    <members>
        <member name="T:IQ.Framework.ApplicationServices.ApplicationServiceFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.Create``1">
            <summary>
            Creates this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.Create``1(System.Boolean)">
            <summary>
            Creates the specificed servers using application configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.Create``1(System.String)">
            <summary>
            Creates the specified Business Service with SSL turned ON
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serverAddress">The server address.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.Create``1(System.String,System.Boolean,System.Boolean,System.Uri)">
            <summary>
            Creates the specified Business Service and decide if ssl is enabled or not
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serverAddress">The server address.</param>
            <param name="sslEnabled">if set to <c>true</c> [SSL enabled].</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.GetEndPointAddress``1(System.String,System.Boolean)">
            <summary>
            Gets the end point address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serverAddress">The server address.</param>
            <param name="sslEnabled">if set to <c>true</c> [SSL enabled].</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.GetEndPointAddress(System.Type,System.String,System.Boolean)">
            <summary>
            Get the endpoint address
            </summary>
            <param name="contractType"></param>
            <param name="serverAddress"></param>
            <param name="sslEnabled"></param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.GetEndPointAddress(System.Type,System.String,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get an endpoint address and override the version
            </summary>
            <param name="contractType"></param>
            <param name="serverAddress"></param>
            <param name="sslEnabled"></param>
            <param name="versionMajor"></param>
            <param name="versionMinor"></param>
            <param name="versionBuild"></param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.GetServiceAssemblyAttribute(System.Type)">
            <summary>
            Gets the service assembly attribute.
            </summary>
            <param name="contractType">Type of the contract.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.GetServiceContractName(System.Type)">
            <summary>
            Gets the name of the service contract.
            </summary>
            <param name="contractType">Type of the contract.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceFactory.GetApplicationObject(System.Type,System.String)">
            <summary>
            Gets the application object.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="debugBinPath">The debug bin path.</param>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.ApplicationServices.ApplicationServiceFactory.Cache">
            <summary>
            Gets the cache.
            </summary>
            <value>The cache.</value>
        </member>
        <member name="T:IQ.Framework.ApplicationServices.ApplicationServiceBase">
            <summary>
            Application Service Base must be inherited from to provide Core Business Service 
            functionality
            </summary>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ApplicationServiceBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.ClientService`1.#ctor(`0)">
            <summary>
            Initializes a ClientService wrapper with the specified channel. Do not call this directly
            when connecting to WCF services hosted via HTTP by means of IQ.Framework; use
            ApplicationServiceFactory.CreateService`1 instead. This constructor is public to allow
            the wrapper to be used with other transports.
            </summary>
            <param name="channel"></param>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.Query`1.RunMethod(System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>
            Runs the method.
            </summary>
            <param name="methodCallMessage">The method call message.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.ApplicationServices.ServiceAssemblyAttribute">
            <summary>
            This attribute is used to replace the Version component of the ApplicationServiceFactory when building the WCF URL.
            </summary>
        </member>
        <member name="P:IQ.Framework.ApplicationServices.ServiceAssemblyAttribute.ServiceAssemblyName">
            <summary>
            Gets the name of the service assembly.
            </summary>
            <value>The name of the service assembly.</value>
        </member>
        <member name="P:IQ.Framework.ApplicationServices.ServiceCache.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.TryAgainContractAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.ApplicationServices.TryAgainContractAttribute"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.TryAgainContractAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.ApplicationServices.TryAgainContractAttribute"/> class.
            </summary>
            <param name="defaultTries">The default tries.</param>
        </member>
        <member name="P:IQ.Framework.ApplicationServices.TryAgainContractAttribute.DefaultTries">
            <summary>
            Gets the default tries.
            </summary>
            <value>The default tries.</value>
        </member>
        <member name="P:IQ.Framework.ApplicationServices.TryAgainContractAttribute.DefaultSleepTime">
            <summary>
            Gets the default sleep time.
            </summary>
            <value>The default sleep time.</value>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.TryAgainAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.ApplicationServices.TryAgainAttribute"/> class. using a default tries of 1
            </summary>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.TryAgainAttribute.#ctor(System.Int32,System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.ApplicationServices.TryAgainAttribute"/> class.
            </summary>
            <param name="tries">The tries.</param>
            <param name="additionalExceptionTypes">The additional exception types.</param>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.TryAgainAttribute.#ctor(System.Int32,System.Int32,System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.ApplicationServices.TryAgainAttribute"/> class.
            </summary>
            <param name="tries">The tries.</param>
            <param name="sleepTime">The sleep time.</param>
            <param name="additionalExceptionTypes">The additional exception types.</param>
        </member>
        <member name="P:IQ.Framework.ApplicationServices.TryAgainAttribute.Tries">
            <summary>
            Gets or sets the tries.
            </summary>
            <value>The tries.</value>
        </member>
        <member name="P:IQ.Framework.ApplicationServices.TryAgainAttribute.SleepTime">
            <summary>
            Gets the sleep time.
            </summary>
            <value>The sleep time.</value>
        </member>
        <member name="M:IQ.Framework.ApplicationServices.TryAgainProxy`1.RunMethod(System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>
            Runs the method.
            </summary>
            <param name="methodCallMessage">The method call message.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Attributes.Adapters.AttributesAdapters">
            <summary>
             Factory class to provide adapters to retrieve data
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.Adapters.AttributesAdapters.GlobalAttributes_UpdateAdapter">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.Adapters.AttributesAdapters.GlobalAttributes_SelectAllAdapter">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.Adapters.AttributesAdapters.GlobalAttributeValues_UpdateAdapter">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.Adapters.AttributesAdapters.GlobalAttributeValues_SelectByAttributeIDAdapter(System.Guid)">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.Adapters.AttributesAdapters.GlobalAttributeValues_SelectByRowIDAdapter(System.Guid)">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="T:IQ.Framework.BusinessServices.BusinessServerManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.BusinessServices.BusinessServerManager.REMOTINGEXTENSION">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServerManager.RegisterBusinessServices">
            <summary>
            Registers the business services for the specifed server.
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServerManager.RegisterBusinessService(System.Type,System.Type,System.Runtime.Remoting.WellKnownObjectMode,System.String)">
            <summary>
            Registers the business service.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="implementationType">Type of the implementation.</param>
            <param name="wellKnownObjectMode">The well known object mode.</param>
            <param name="uniqueName">Name of the unique.</param>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServerManager.GetBusinessServiceURL(System.Type,System.String)">
            <summary>
            Gets the business service URL.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="uniqueName">Name of the unique.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.BusinessServices.BusinessServiceBase">
            <summary>
            Business Service Base must be inherited from to provide Core Business Service 
            functionality
            </summary>
        </member>
        <member name="T:IQ.Framework.BusinessServices.IBusinessService">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServiceBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:IQ.Framework.BusinessServices.ActivationTypeEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.BusinessServices.ActivationTypeEnum.Local">
            <summary>
            All calls to the business service will be executed locally as a normal object
            </summary>
        </member>
        <member name="F:IQ.Framework.BusinessServices.ActivationTypeEnum.Remote">
            <summary>
            All calls to the business service will be executed remotely using a Transparent Proxy
            </summary>
        </member>
        <member name="T:IQ.Framework.BusinessServices.PortEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.BusinessServices.PortEnum.Http">
            <summary>
            The Remoting sub system will use HTTP protocol to transport the message payload
            </summary>
        </member>
        <member name="T:IQ.Framework.BusinessServices.BusinessServiceFactory`1">
            <summary>
            This factory class will create your business service based on the interface that you provide
            and the businessServiceSettings configuration in your config file.
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServiceFactory`1.Create">
            <summary>
            Creates the business service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServiceFactory`1.Create(System.String)">
            <summary>
            Creates the business service that corresponds to the type and the interfaceUniqueName
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServiceFactory`1.GetAssemblyVersion(System.Reflection.Assembly)">
            <summary>
            Gets the assembly version.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServiceFactory`1.ActivateRemoteObject(System.Type,IQ.Framework.Configuration.ClientServerSetting,System.String,System.String)">
            <summary>
            Activates the remote object using the Activator object and Configuration information.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="serverSetting">The server setting.</param>
            <param name="version">The version.</param>
            <param name="uniqueName">Name of the unique.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.BusinessServiceFactory`1.GetClientBusinessServiceURL(System.Type,IQ.Framework.Configuration.ClientServerSetting,System.String,System.String)">
            <summary>
            Gets the business service URL based on the properties from the Server Setting and the Type.
            </summary>
            <param name="businessInterface">The business interface.</param>
            <param name="serverSetting">The server setting.</param>
            <param name="version">The version.</param>
            <param name="uniqueName">Name of the unique.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.ClientServerSettingsManager.GetClientServerSetting(System.String)">
            <summary>
            Gets the client server settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.ClientServerSettingsManager.GetClientServerSection">
            <summary>
            Gets the client server section.
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.LocalServiceManager.GetImplementationType(System.Type,System.String)">
            <summary>
            Gets the type of the implementation.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="uniqueName">Name of the unique.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.LocalServiceManager.GetAssemblyImplementationType(System.Reflection.Assembly,System.Type,System.String)">
            <summary>
            Gets the type of the assembly implementation.
            </summary>
            <param name="serverAssembly">The server assembly.</param>
            <param name="interfaceType">Type of the interface.</param>
            <param name="uniqueName">Name of the unique.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.LocalServiceManager.GetCacheKey(System.Type,System.String)">
            <summary>
            Gets the cache key.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="uniqueName">Name of the unique.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.BusinessServices.RemotingChannelManager.RegisterServerChannel(System.Boolean)">
            <summary>
            Registers the server channel.
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.RemotingChannelManager.RegisterClientChannel(IQ.Framework.Configuration.ClientServerSetting)">
            <summary>
            Registers the client channel.  Ensures that it doesn't try to register more than once.
            </summary>
            <param name="serverSetting">The server setting.</param>
        </member>
        <member name="T:IQ.Framework.Caching.CachableItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Caching.ICacheableItem">
            <summary>
            Marks an object as cachable
            </summary>
        </member>
        <member name="M:IQ.Framework.Caching.CachableItem.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Caching.CachableItem"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="timestamp">The timestamp.</param>
        </member>
        <member name="M:IQ.Framework.Caching.CachableItem.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:IQ.Framework.Caching.CachableItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:IQ.Framework.Caching.CachableItem.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:IQ.Framework.Caching.CachableItem.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="T:IQ.Framework.Caching.Cache">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Caching.Cache._inMemoryCache">
            <summary>
            The Hashtable representing the in-memory chache.
            </summary>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.#ctor(System.String)">
            <summary>
            Initializes a new instance of a Cache class.
            </summary>
            <param name="CacheName"> The name of the cache. </param>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.Contains(IQ.Framework.Caching.CacheKey)">
            <summary>
            Returns true if key refers to item currently stored in the cache
            </summary>
            <param name="key">Key of item to check for</param>
            <returns>
            True if item referenced by key is in the cache
            </returns>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.Add(IQ.Framework.Caching.CacheKey,System.Object)">
            <summary>
            Add a new keyed object to the cache.
            </summary>
            <param name="key">The key of the object.</param>
            <param name="value">The object to add.</param>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.Add(IQ.Framework.Caching.CacheKey,System.Object,System.Int32)">
            <summary>
            Add a new keyed object to the cache.
            </summary>
            <param name="key">The key of the object.</param>
            <param name="value">The object to add.</param>
            <param name="minutesToLive">The time in minutes an item has until it expires.</param>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.Add(IQ.Framework.Caching.CacheKey,System.Object,System.TimeSpan)">
            <summary>
            Add a new keyed object to the cache.
            </summary>
            <param name="key">The key of the object.</param>
            <param name="value">The object to add.</param>
            <param name="timeToLive">The time span an item that is added to the cache has until it expires.</param>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.Add(IQ.Framework.Caching.CacheKey,System.Object,System.DateTime)">
            <summary>
            Add a new keyed object to the cache.
            </summary>
            <param name="key">The key of the object.</param>
            <param name="value">The object to add.</param>
            <param name="expireDate">The actual date the item being added to the cache expires.</param>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.Remove(IQ.Framework.Caching.CacheKey)">
            <summary>
            Removes the given item from the cache. If no item exists with that key, this method does nothing.
            </summary>
            <param name="key">Key of item to remove from cache.</param>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.GetData(IQ.Framework.Caching.CacheKey)">
            <summary>
            Returns the value associated with the given key.
            </summary>
            <param name="key">Key of item to return from cache.</param>
            <returns>Value stored in cache</returns>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.Flush">
            <summary>
            Flush the cache.
            </summary>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.ValidateKey(IQ.Framework.Caching.CacheKey)">
            <summary>
            Make sure the provided key is not null or empty.
            </summary>
            <param name="key"> The CacheItem key. </param>
        </member>
        <member name="M:IQ.Framework.Caching.Cache.IsObjectInCache(IQ.Framework.Caching.CacheItem)">
            <summary>
            Checks of the CacheItem exists within the cache.
            </summary>
            <param name="cacheItemBeforeLock"> The CacheItem </param>
            <returns> True if the item does not exist </returns>
        </member>
        <member name="P:IQ.Framework.Caching.Cache.Count">
            <summary>
            Gets the count of items in the cache.
            </summary>
        </member>
        <member name="P:IQ.Framework.Caching.Cache.CurrentCacheState">
            <summary>
            Gets the current cache.
            </summary>
            <returns>
            The current cache.
            </returns>
        </member>
        <member name="P:IQ.Framework.Caching.Cache.Item(IQ.Framework.Caching.CacheKey)">
            <summary>
            Returns the item identified by the provided key
            </summary>
            <param name="key">Key to retrieve from cache</param>
        </member>
        <member name="T:IQ.Framework.Caching.CacheItem">
            <summary>
            Represents an individual item within the Cache.
            </summary>
        </member>
        <member name="M:IQ.Framework.Caching.CacheItem.#ctor(IQ.Framework.Caching.CacheKey,System.Object,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Caching.CacheItem"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="expireDate">The expire date.</param>
        </member>
        <member name="M:IQ.Framework.Caching.CacheItem.HasExpired">
            <summary>
            Determines whether this instance has expired.
            </summary>
            <returns>
            	<c>true</c> if this instance has expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:IQ.Framework.Caching.CacheItem.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:IQ.Framework.Caching.CacheItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:IQ.Framework.Caching.CacheItem.ExpireDate">
            <summary>
            Gets the expire date.
            </summary>
            <value>The expire date.</value>
        </member>
        <member name="P:IQ.Framework.Caching.CacheItem.AddedDate">
            <summary>
            Gets the added date.
            </summary>
            <value>The added date.</value>
        </member>
        <member name="T:IQ.Framework.Caching.CacheManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Caching.CacheManager.GetCache(System.String)">
            <summary>
            Provides access to a cache that is available within the application domain.
            </summary>
            <param name="cacheName"></param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Caching.CacheManager.GetCache">
            <summary>
            Creates a cache that is local.  The developer must maintain state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Caching.CacheManager.RemoveCache(System.String)">
            <summary>
            Removes the cache.
            </summary>
            <param name="cacheName">Name of the cache.</param>
        </member>
        <member name="M:IQ.Framework.Caching.CacheProxy`1.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            When overridden in a derived class, invokes the method that is specified in the provided <see cref="T:System.Runtime.Remoting.Messaging.IMessage"/> on the remote object that is represented by the current instance.
            </summary>
            <param name="msg">A <see cref="T:System.Runtime.Remoting.Messaging.IMessage"/> that contains a <see cref="T:System.Collections.IDictionary"/> of information about the method call.</param>
            <returns>
            The message returned by the invoked method, containing the return value and any out or ref parameters.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure"/>
            </PermissionSet>
        </member>
        <member name="M:IQ.Framework.Caching.CacheProxy`1.RunMethod(System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>
            Runs the method.
            </summary>
            <param name="methodCallMessage">The method call message.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Caching.CacheProxy`1.CallService(System.Runtime.Remoting.Messaging.IMethodCallMessage,IQ.Framework.Caching.CacheKey)">
            <summary>
            Calls the service.
            </summary>
            <param name="methodCallMessage">The method call message.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationServerSetting.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.Add(IQ.Framework.Configuration.ApplicationServerSetting)">
            <summary>
            Adds the specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>
            Adds a configuration element to the configuration element collection.
            </summary>
            <param name="index">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.</param>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to add.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.IndexOf(IQ.Framework.Configuration.ApplicationServerSetting)">
            <summary>
            Indexes the of.
            </summary>
            <param name="settings">The settings.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.Remove(IQ.Framework.Configuration.ApplicationServerSetting)">
            <summary>
            Removes the specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationServerSettingsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationServerSettingsCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:IQ.Framework.Configuration.BusinessServerAssemblySetting"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationServerSettingsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:IQ.Framework.Configuration.BusinessServerAssemblySetting"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:IQ.Framework.DAL.DataContractSurrogate`1">
            <summary>
            This object will serialize and compress the object if necessary.  Use this for any object
            that needs to be transferred between the client and server (remoting)
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:IQ.Framework.DAL.DataContractSurrogate`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataSurrogate`1"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataContractSurrogate`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataSurrogate`1"/> class.
            </summary>
            <param name="serializableObject">The serializable object.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataContractSurrogate`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="P:IQ.Framework.DAL.DataContractSurrogate`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:IQ.Framework.DAL.DataSetBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataSetBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataSetBase"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataSetBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataSetBase"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataSetBase.InitializeDerivedDataSet">
            <summary>
             Initialize the derived data set
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataSetBase.InitClass">
            <summary>
            Inits the class.
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataSetBase.InitRelations">
             <summary>
             Inits the relations.
             </summary>
            <summary>
             Initialize the relations
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataSetBase.ShouldSerializeTables">
            <summary>
             Should serialize the tables?
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataSetBase.ShouldSerializeRelations">
            <summary>
             Should serialize Relations
            </summary>
        </member>
        <member name="P:IQ.Framework.DAL.DataSetBase.Tables">
            <summary>
            Gets the collection of tables contained in the <see cref="T:System.Data.DataSet"></see>.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.Data.DataTableCollection"></see> contained by this <see cref="T:System.Data.DataSet"></see>. An empty collection is returned if no <see cref="T:System.Data.DataTable"></see> objects exist.</returns>
        </member>
        <member name="P:IQ.Framework.DAL.DataSetBase.SchemaSerializationMode">
            &lt;summary&gt;
             Schema Serialization Mode
            &lt;/summary&gt;
        </member>
        <member name="T:IQ.Framework.DAL.InternalConnection">
            <summary>
            Use to get access to some internal workings of the framework
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.InternalConnection.ByPassConnectionStringSlot">
            <summary>
            This string is used internally by the framework to bypass the ConnectionString.
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.InternalConnection.ByPassProviderSlot">
            <summary>
            This string is used internally by the framework to bypass the provider
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.LargeReadOnlyDataTableSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:IQ.Framework.DAL.LargeReadOnlyDataTableSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.LargeReadOnlyDataTableSurrogate"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:IQ.Framework.Database.DataRowBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Database.DataRowBase.#ctor(System.Data.DataRowBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Database.DataRowBase"/> class.
            </summary>
            <param name="builder">builder</param>
        </member>
        <member name="M:IQ.Framework.Database.DataRowBase.WriteDBValue(System.Data.DataColumn,System.Object)">
            <summary>
            Writes the DB value.
            </summary>
            <param name="voColumn">The vo column.</param>
            <param name="voValue">The vo value.</param>
        </member>
        <member name="M:IQ.Framework.Database.DataRowBase.IsColumnModified(System.Data.DataColumn)">
            <summary>
             Is this column modified?
            </summary>
        </member>
        <member name="M:IQ.Framework.Database.DataRowBase.TransferTo(System.Data.DataRow)">
            <summary>
            Transfers to.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:IQ.Framework.Database.DataRowBase.TransferFrom(System.Data.DataRow)">
            <summary>
            Transfers from.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:IQ.Framework.Database.DataRowBase.Modified">
             <summary>
             Determins if this object has been modified
            </summary>
        </member>
        <member name="P:IQ.Framework.Database.DataRowBase.SourceColumnMappings">
            <summary>
            Gets the source column mappings.
            </summary>
            <value>The source column mappings.</value>
        </member>
        <member name="T:IQ.Framework.DataServices.DataServiceAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DataServices.DataServiceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.DataServiceAttribute"/> class.
            </summary>
            <param name="dataServiceTypeName">Name of the data service type.</param>
        </member>
        <member name="P:IQ.Framework.DataServices.DataServiceAttribute.DataServiceTypeName">
            <summary>
            Gets the name of the data service type.
            </summary>
            <value>The name of the data service type.</value>
        </member>
        <member name="P:IQ.Framework.DataServices.DataServiceAttribute.DataService">
            <summary>
            Gets the data service.
            </summary>
            <value>The data service.</value>
        </member>
        <member name="P:IQ.Framework.DataServices.DataServiceBase.DataSession">
            <summary>
            Gets the data session.
            </summary>
            <value>The data session.</value>
        </member>
        <member name="T:IQ.Framework.DAL.IDataSession">
            <summary>
            Public interface for the IDataSession class.
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.IDataSession.Fill(System.Data.DataTable,System.Data.IDbDataAdapter)">
            <summary>
            Fills the specified data table.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="dataAdapter">The data adapter.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.IDataSession.Fill(System.Data.DataSet,System.Data.IDbDataAdapter[])">
            <summary>
            Fills the specified data set.
            </summary>
            <param name="dataSet">The data set.</param>
            <param name="dataAdapters">The data adapters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.IDataSession.Update(System.Data.DataSet,System.Data.IDbDataAdapter[])">
            <summary>
            Updates the specified data set.
            </summary>
            <param name="dataSet">The data set.</param>
            <param name="dataAdapters">The data adapters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.IDataSession.Update(System.Data.DataTable,System.Data.IDbDataAdapter)">
            <summary>
            Updates the specified data table.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="dataAdapter">The data adapter.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.IDataSession.ExecuteReader(System.Data.IDbCommand,System.Data.CommandBehavior)">
            <summary>
            Executes the reader.
            </summary>
            <param name="command">The command.</param>
            <param name="behavior">The behavior.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.IDataSession.ExecuteScalar(System.Data.IDbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.IDataSession.ExecuteNonQuery(System.Data.IDbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataSession.Fill(System.Data.DataTable,System.Data.IDbDataAdapter)">
            <summary>
            Fills the specified data table using the supplied data Adapter
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="dataAdapter">The data adapter.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataSession.Fill(System.Data.DataSet,System.Data.IDbDataAdapter[])">
            <summary>
            Fill the DataSet using the supplied Data Adapters
            </summary>
            <param name="dataSet">The data set.</param>
            <param name="dataAdapters">The data adapters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataSession.Update(System.Data.DataTable,System.Data.IDbDataAdapter)">
            <summary>
            Updates the specified data table using the dataAdapter
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="dataAdapter">The data adapter.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataSession.Update(System.Data.DataSet,System.Data.IDbDataAdapter[])">
            <summary>
            Update the DataSet using the supplied Data Adapters
            </summary>
            <param name="dataSet">The data set.</param>
            <param name="dataAdapters">The data adapters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataSession.ExecuteReader(System.Data.IDbCommand,System.Data.CommandBehavior)">
            <summary>
            Executes the reader.
            </summary>
            <param name="command">The command.</param>
            <param name="behavior">The behavior.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataSession.ExecuteScalar(System.Data.IDbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataSession.ExecuteNonQuery(System.Data.IDbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.DataServices.DataSurrogate`1">
            <summary>
            This object will serialize and compress the object if necessary.  Use this for any object
            that needs to be transferred between the client and server (remoting)
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:IQ.Framework.DAL.DataSurrogate`1">
            <summary>
            This object will serialize and compress the object if necessary.  Use this for any object
            that needs to be transferred between the client and server (remoting)
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:IQ.Framework.DAL.DataSurrogate`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataSurrogate`1"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataSurrogate`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataSurrogate`1"/> class.
            </summary>
            <param name="serializableObject">The serializable object.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataSurrogate`1.SetObjectSerializationProperties(System.Object)">
            <summary>
            Sets properties on the object for serialization.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataSurrogate`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="P:IQ.Framework.DAL.DataSurrogate`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:IQ.Framework.DataServices.DataSurrogate`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.DataSurrogate`1"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.DataSurrogate`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.DataSurrogate`1"/> class.
            </summary>
            <param name="serializableObject">The serializable object.</param>
        </member>
        <member name="T:IQ.Framework.Database.DataTableBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Database.DataTableBase"/> class.
            </summary>
            <param name="info">The data needed to serialize or deserialize an object.</param>
            <param name="context">The source and destination of a given serialized stream.</param>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Database.DataTableBase"/> class.
            </summary>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Database.DataTableBase"/> class.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.InitRelations(System.Data.DataSet)">
            <summary>
            Inits the relations.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.SelectSingleRow(System.String)">
            <summary>
            Selects the single row.
            </summary>
            <param name="filterExpression">The filter expression.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.SelectSingleRow(System.String,System.Data.DataViewRowState)">
            <summary>
            Selects the single row.
            </summary>
            <param name="filterExpression">The filter expression.</param>
            <param name="recordStates">The record states.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.NewDefaulted">
            <summary>
            News the defaulted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.Add">
            <summary>
            Adds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.GetEnumerator">
            <summary>
             Gets the Enumerator
            </summary>
        </member>
        <member name="M:IQ.Framework.Database.DataTableBase.New">
            <summary>
             Returns a new object but doesn't add it to this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Database.DataTableBase.Count">
            <summary>
             Returns the number of objects that are contained within this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Database.DataTableBase.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:IQ.Framework.DataServices.Exceptions.DataException">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.Exceptions.DataException">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Exceptions.ExceptionBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor(IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor(System.String,IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="messageText">The message text.</param>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.#ctor(IQ.Framework.Messaging.MessageCollection,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ExceptionBase.IsNetworkConnectivityException(System.Exception)">
            <summary>
            Returns whether the given exception is a type of network related connectivity exception or not.
            </summary>
            <param name="e">The exception to check.</param>
        </member>
        <member name="P:IQ.Framework.Exceptions.ExceptionBase.Messages">
            <summary>
            Gets the messages.
            </summary>
            <value>The messages.</value>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.Exceptions.DataException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            
            </summary>
            <param name="messageCollection"></param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.#ctor(IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.#ctor(System.Data.DataSet)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.Exceptions.DataException"/> class.
            </summary>
            <param name="workspace">The workspace.</param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.GetWorkSpaceError(System.Data.DataSet)">
            <summary>
            Gets the work space error.
            </summary>
            <param name="dataSet">The work space.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.BreakAndDisplayErrorIfDebuggerIsAttached(System.Data.DataSet)">
            <summary>
            Breaks execution and displays the DataSet's error message to the developer if a debugger is attached.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException.BreakAndDisplayErrorIfDebuggerIsAttached(System.Data.DataTable)">
            <summary>
            Breaks execution and displays the DataTable's error message to the developer if a debugger is attached.
            </summary>
            <param name="dataTable">The data table.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            
            </summary>
            <param name="messageCollection"></param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataException.#ctor(IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataException.#ctor(System.Data.DataSet)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="workspace">The workspace.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:IQ.Framework.Database.ICacheableDataTable">
            <summary>
            This class defines the Data Table as being Cachable. 
            </summary>
        </member>
        <member name="T:IQ.Framework.Database.IDALDataRow">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Database.IDALDataRow.WriteDBValue(System.Data.DataColumn,System.Object)">
            <summary>
            Writes the DB value.
            </summary>
            <param name="voColumn">The vo column.</param>
            <param name="voValue">The vo value.</param>
        </member>
        <member name="M:IQ.Framework.Database.IDALDataRow.TransferTo(System.Data.DataRow)">
            <summary>
            Transfers the data from this row to the target row based on the SourceColumnMappings.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:IQ.Framework.Database.IDALDataRow.TransferFrom(System.Data.DataRow)">
            <summary>
            Transfers the data from the target row to this row based on the SourceColumnMappings.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="T:IQ.Framework.Database.IDALDataSet">
            <summary>
            Interface for the Dataset.  It implements the InitRelations that is used when the dataset needs
            to refresh the relations.  Specifically, when a table is removed and then added again.
            </summary>
        </member>
        <member name="M:IQ.Framework.Database.IDALDataSet.InitRelations">
            <summary>
            Inits the relations.
            </summary>
        </member>
        <member name="T:IQ.Framework.Database.IDALDataTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Database.IDALDataTable.InitRelations(System.Data.DataSet)">
            <summary>
            Inits the relations.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="T:IQ.Framework.DataServices.Exceptions.DataServiceException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataServiceException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            
            </summary>
            <param name="messageCollection"></param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataServiceException.#ctor(IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:IQ.Framework.DataServices.Exceptions.DataServiceException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DataServices.Exceptions.DataException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:IQ.Framework.Diagnostics.IAPIMessageLogService">
            <summary>
            To log messages into the Public API (RESTful) services.  Uses behaviours and listeners to accomplish this.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.IAPIMessageLogService.LogMessage(System.DateTime,System.String,System.Int32,System.String,System.Guid,System.Guid,System.String,System.String,System.String)">
            <summary>
            Logs the message.
            </summary>
            <param name="exceptionContext">The exception context.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ServiceMessageLogger.GetMachineName">
            <summary>
            Gets the name of the machine.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Diagnostics.ExceptionTextFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.ExceptionTextFormatter"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.ExceptionTextFormatter"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.WriteAppUserInformation(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Writes the app user information.
            </summary>
            <param name="appUser">The app user.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.WriteDescription">
            <summary>
            Writes the description.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.WriteDateTime(System.DateTime)">
            <summary>
            Writes the date time.
            </summary>
            <param name="utcNow">The UTC now.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.WriteExceptionInformation(System.Exception,System.Exception)">
            <summary>
            Writes the exception information.
            </summary>
            <param name="exceptionToFormat">The exception to format.</param>
            <param name="outerException">The outer exception.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.WriteException(System.Exception,System.Exception)">
            <summary>
            Writes the exception.
            </summary>
            <param name="exceptionToFormat">The exception to format.</param>
            <param name="outerException">The outer exception.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.Indent">
            <summary>
            Indents the <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.GetMachineName">
            <summary>
            Gets the name of the machine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.GetWindowsIdentity">
            <summary>
            Gets the windows identity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionTextFormatter.FormatException(System.Exception)">
            <summary>
            Formats the exception.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Diagnostics.ExceptionTextFormatter.AdditionalInfo">
            <summary>
            Gets the additional info.
            </summary>
            <value>The additional info.</value>
        </member>
        <member name="M:IQ.Framework.Entities.LocalizableEntityExtensions.SetLocalizedValue``3(IQ.Framework.Entities.ILocalizableEntity{``0,``1,``2},System.Nullable{System.Guid},System.String,System.Func{``2},System.Func{``1})">
            <summary>
            Sets the localized value.
            </summary>
            <param name="entity">The source.</param>
            <param name="referenceID">The reference ID.</param>
            <param name="value">The value.</param>
            <param name="languageXrefCreator">The language xref creator.</param>
            <param name="languageTranslationCreator">The language translation creator.</param>
        </member>
        <member name="M:IQ.Framework.Entities.LocalizableEntityExtensions.GetLanguageCode">
            <summary>
            Gets the language code for the current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Exceptions.SessionManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.AnonymousRequestsNotAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.AnonymousRequestsNotAllowedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.AppUserMustBeSetException"/> class.
            </summary>
        </member>
        <member name="T:IQ.Framework.Exceptions.ConnectivityException">
            <summary>
            This exception will be thrown whenever there is a connectivity issue.
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectivityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:IQ.Framework.Exceptions.LocalizationException">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Exceptions.DoNotLogException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.DoNotLogException.#ctor">
            <summary>
            Users the cancelled exception.
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.DoNotLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.NoRecordsExistException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.DoNotLogException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.DoNotLogException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.DoNotLogException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.DoNotLogException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DoNotLogException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.DoNotLogException.#ctor(IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DoNotLogException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.LocalizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.NoRecordsExistException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.LocalizationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.LocalizationException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.LocalizationException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.LANConnectivityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:IQ.Framework.Exceptions.SaleTransactionSemiCompleteException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.SaleTransactionSemiCompleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.NoRecordsExistException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.SaleTransactionSemiCompleteException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.SaleTransactionSemiCompleteException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.SaleTransactionSemiCompleteException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="T:IQ.Framework.Exceptions.NoRecordsExistException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.NoRecordsExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.NoRecordsExistException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.NoRecordsExistException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.NoRecordsExistException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.NoRecordsExistException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="T:IQ.Framework.Exceptions.DateTimeException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.DateTimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.DateTimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.DateTimeException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.DateTimeException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="T:IQ.Framework.Exceptions.NoRecordsSelectedException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.NoRecordsSelectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.NoRecordsSelectedException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.NoRecordsSelectedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.NoRecordsSelectedException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.NoRecordsSelectedException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.DateTimeException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="T:IQ.Framework.Exceptions.TryAgainException">
            <summary>
            This exception is thrown when the method has a TryAgainAttribute Defined and has failed the # of times defined.
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.TryAgainException.#ctor(System.Int32,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.TryAgainException"/> class.
            </summary>
            <param name="tries">The tries.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IQ.Framework.Exceptions.TryAgainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" -->
        <member name="T:IQ.Framework.Exceptions.ValidationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ValidationException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ValidationException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ValidationException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ValidationException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.WCFConnectivityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:System.iQDateTime">
            <summary>
            Static class that provides the local date/time of the user.
            </summary>
        </member>
        <member name="P:System.iQDateTime.Now">
            <summary>
            Gets the current local time of the user. 
            </summary>
        </member>
        <member name="P:System.iQDateTime.NowAsOffset">
            <summary>
            Gets the current local time of the user as a DateTimeOffset.
            </summary>
        </member>
        <member name="P:System.iQDateTime.Today">
            <summary>
            Gets the current local date of the user.
            </summary>
        </member>
        <member name="P:System.iQDateTime.TodayAsOffset">
            <summary>
            Gets the current local date of the user as a DateTimeOffset.
            </summary>
        </member>
        <member name="P:System.iQDateTime.UtcNow">
            <summary>
            Gets the current local time of the user expressed as the Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="T:System.DateTimeExtensions">
            <summary>
            Extension methods for DateTime instances to provide the local date/time of the logged in store.
            </summary>
        </member>
        <member name="M:System.DateTimeExtensions.GetiQNow(System.DateTime)">
            <summary>
            Gets the current local time of the user, leaving this instance's value in tact.
            </summary>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:System.DateTimeExtensions.GetiQToday(System.DateTime)">
            <summary>
            Gets the current local day of the user, leaving this instance's value in tact.
            </summary>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:System.DateTimeExtensions.GetiQUtcNow(System.DateTime)">
            <summary>
            Gets the current local time of the user expressed as the Coordinated Universal Time (UTC), leaving this instance's value in tact.
            </summary>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:System.StringExtensions.IsGuid(System.String)">
            <summary>
            Determines whether the specified STR is GUID.
            </summary>
            <param name="str">The STR.</param>
            <returns>
            	<c>true</c> if the specified STR is GUID; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:IQ.Framework.Faults.FaultBase.Message">
            <summary>
            The message
            </summary>
        </member>
        <member name="P:IQ.Framework.Faults.FaultBase.Details">
            <summary>
            Fault details.  May include serialized exception details
            </summary>
        </member>
        <member name="P:IQ.Framework.Faults.FaultBase.Code">
            <summary>
            An error code
            </summary>
        </member>
        <member name="P:IQ.Framework.Faults.FaultBase.Messages">
            <summary>
            Collection of IQ.Framework.Messaging.MessageBase classes, supplying stongly typed Xml serializable messages
            </summary>
        </member>
        <member name="T:IQ.Framework.Localization.Adapters.LocalizationAdapters">
            <summary>
             Factory class to provide adapters to retrieve data
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Adapters.LocalizationAdapters.Languages_UpdateAdapter">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Adapters.LocalizationAdapters.Languages_SelectAllAdapter">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Adapters.LocalizationAdapters.Languages_SelectEnabledAdapter(System.Boolean,System.Boolean)">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Adapters.LocalizationAdapters.Languages_SelectSystemEnabledAdapter(System.Boolean)">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Adapters.LocalizationAdapters.LanguageTranslations_UpdateAdapter">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Adapters.LocalizationAdapters.LanguageTranslations_SelectByReferenceIDAdapter(System.Guid)">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Adapters.LocalizationAdapters.LanguageTranslations_SelectByReferenceIDAndLanguageCodeAdapter(System.Guid,System.String)">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Adapters.LocalizationAdapters.LanguageTranslations_SelectByLocalizationIDAdapter(System.Guid)">
            <summary>
             Factory method to return a Data adapter
            </summary>
        </member>
        <member name="T:IQ.Framework.Localization.Language">
            <summary>
            Language DataRow
            </summary>
            <summary>
            Language DataRow
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.IDALDataRow">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Language.WriteDBValue(System.Data.DataColumn,System.Object)">
            <summary>
             Write the value of the column back to the data row
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Language.IsColumnModified(System.Data.DataColumn)">
            <summary>
             Is this column modified?
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Language.TransferTo(System.Data.DataRow)">
            <summary>
            Transfers the data from this row to the target row based on the SourceColumnMappings.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:IQ.Framework.Localization.Language.TransferFrom(System.Data.DataRow)">
            <summary>
            Transfers the data from the target row to this row based on the SourceColumnMappings.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Item(System.Data.DataColumn)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Item(System.Int32)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Item(System.String)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Item(System.Int32,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Item(System.String,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.LanguageID">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.LanguageCode">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Enabled">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.SystemEnabled">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Table">
            <summary>
             Returns the typed object to which this object belongs
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.Modified">
             <summary>
             Determins if this object has been modified
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.SourceColumnMappings">
            <summary>
             Returns the mapping array when this object is defined in the model from 
             another object
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Language.LanguageDisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="T:IQ.Framework.Localization.Languages">
            <summary>
            Languages DataTable
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.IDALDataTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.IDALDataTable.InitRelations(System.Data.DataSet)">
            <summary>
            Inits the relations.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.#ctor">
            <summary>
             Languages Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Serialized Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.#ctor(System.String)">
            <summary>
             Languages Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.InitRelations(System.Data.DataSet)">
            <summary>
             Initialize relations for the dataset
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Select">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Select(System.String)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Select(System.String,System.String)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Select(System.String,System.String,System.Data.DataViewRowState)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.SelectSingleRow(System.String)">
            <summary>
             Select a single object based on the filter expression.  If more than one object
             is found, it will throw an exception
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.SelectSingleRow(System.String,System.Data.DataViewRowState)">
            <summary>
             Select a single object based on the filter expression.  If more than one object
             is found, it will throw an exception
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.NewDefaulted">
            <summary>
             New object that has default values
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Add">
            <summary>
             Add a new object to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Add(IQ.Framework.Localization.Language)">
            <summary>
             Adds a new typed object to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.FindByLanguageID(System.Guid)">
            <summary>
             Finds the objects that are defined by the primary key(s)
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Clone">
            <summary>
             Clones this object structor and data
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Copy">
            <summary>
             Copies this object structor only
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.CreateInstance">
            <summary>
             Create a new instance of this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.New">
            <summary>
             Returns a new object but doesn't add it to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
             Create a new value from the builder (Internal mechansim)
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.GetRowType">
            <summary>
             Returns the type of the value (Internal mechanism)
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.Languages.Remove(IQ.Framework.Localization.Language)">
            <summary>
             Removes an object from this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Languages.LanguageIDColumn">
            <summary>
             Returns the defination of the LanguageID Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Languages.DisplayNameColumn">
            <summary>
             Returns the defination of the DisplayName Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Languages.LanguageCodeColumn">
            <summary>
             Returns the defination of the LanguageCode Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Languages.EnabledColumn">
            <summary>
             Returns the defination of the Enabled Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Languages.SystemEnabledColumn">
            <summary>
             Returns the defination of the SystemEnabled Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Languages.Count">
            <summary>
             Returns the number of objects that are contained within this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.Languages.Item(System.Int32)">
            <summary>
             Indexer for this object
            </summary>
        </member>
        <member name="T:IQ.Framework.Localization.LanguageTranslation">
            <summary>
            LanguageTranslation DataRow
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslation.WriteDBValue(System.Data.DataColumn,System.Object)">
            <summary>
             Write the value of the column back to the data row
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslation.IsColumnModified(System.Data.DataColumn)">
            <summary>
             Is this column modified?
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslation.TransferTo(System.Data.DataRow)">
            <summary>
            Transfers the data from this row to the target row based on the SourceColumnMappings.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslation.TransferFrom(System.Data.DataRow)">
            <summary>
            Transfers the data from the target row to this row based on the SourceColumnMappings.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.Item(System.Data.DataColumn)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.Item(System.Int32)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.Item(System.String)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.Item(System.Int32,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.Item(System.String,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.LanguageCode">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.ReferenceID">
            <summary>
            Loose foreign key to the business table text field
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.LocalizationID">
            <summary>
            This key represents a link to the entire business object (data row).  Essentially a primaryKey without really being the primary key because some of our tables use an int for PK
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.FieldText">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.Table">
            <summary>
             Returns the typed object to which this object belongs
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.Modified">
             <summary>
             Determins if this object has been modified
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslation.SourceColumnMappings">
            <summary>
             Returns the mapping array when this object is defined in the model from 
             another object
            </summary>
        </member>
        <member name="T:IQ.Framework.Localization.LanguageTranslations">
            <summary>
            LanguageTranslations DataTable
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.#ctor">
            <summary>
             LanguageTranslations Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Serialized Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.#ctor(System.String)">
            <summary>
             LanguageTranslations Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.InitRelations(System.Data.DataSet)">
            <summary>
             Initialize relations for the dataset
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Select">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Select(System.String)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Select(System.String,System.String)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Select(System.String,System.String,System.Data.DataViewRowState)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.SelectSingleRow(System.String)">
            <summary>
             Select a single object based on the filter expression.  If more than one object
             is found, it will throw an exception
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.SelectSingleRow(System.String,System.Data.DataViewRowState)">
            <summary>
             Select a single object based on the filter expression.  If more than one object
             is found, it will throw an exception
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.NewDefaulted">
            <summary>
             New object that has default values
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Add">
            <summary>
             Add a new object to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Add(IQ.Framework.Localization.LanguageTranslation)">
            <summary>
             Adds a new typed object to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.FindByLanguageCodeReferenceIDLocalizationID(System.String,System.Guid,System.Guid)">
            <summary>
             Finds the objects that are defined by the primary key(s)
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Clone">
            <summary>
             Clones this object structor and data
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Copy">
            <summary>
             Copies this object structor only
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.CreateInstance">
            <summary>
             Create a new instance of this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.New">
            <summary>
             Returns a new object but doesn't add it to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
             Create a new value from the builder (Internal mechansim)
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.GetRowType">
            <summary>
             Returns the type of the value (Internal mechanism)
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LanguageTranslations.Remove(IQ.Framework.Localization.LanguageTranslation)">
            <summary>
             Removes an object from this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslations.LanguageCodeColumn">
            <summary>
             Returns the defination of the LanguageCode Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslations.ReferenceIDColumn">
            <summary>
             Returns the defination of the ReferenceID Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslations.LocalizationIDColumn">
            <summary>
             Returns the defination of the LocalizationID Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslations.FieldTextColumn">
            <summary>
             Returns the defination of the FieldText Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslations.Count">
            <summary>
             Returns the number of objects that are contained within this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Localization.LanguageTranslations.Item(System.Int32)">
            <summary>
             Indexer for this object
            </summary>
        </member>
        <member name="T:IQ.Framework.Localization.TranslationMemberAttribute">
            <summary>
            Used to tag the properties on a DataRow that hide the translation IDs and return translated data from LocalizationUtility
            </summary>
        </member>
        <member name="M:IQ.Framework.Localization.LocalizationUtility.ImportTranslations(IQ.Framework.Localization.LanguageTranslations,System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:IQ.Framework.Messages">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Messaging.MessageBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Messaging.MessageBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Messaging.MessageBase.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than obj. Zero This instance is equal to obj. Greater than zero This instance is greater than obj.
            </returns>
            <exception cref="T:System.ArgumentException">obj is not the same type as this instance. </exception>
        </member>
        <member name="P:IQ.Framework.Messaging.MessageBase.Key">
            <summary>
            Gets the unique key for the message
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:IQ.Framework.Messaging.MessageBase.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="P:IQ.Framework.Messaging.MessageBase.ReplaceParameters">
            <summary>
            Gets or sets the replace parameters.
            </summary>
            <value>The replace parameters.</value>
        </member>
        <member name="P:IQ.Framework.Messaging.MessageBase.MessageContext">
            <summary>
            The Context of the message. Useful for grouping similar messages.
            </summary>
        </member>
        <member name="P:IQ.Framework.Messaging.MessageBase.MessageNumber">
            <summary>
            The number of the message.
            </summary>
        </member>
        <member name="P:IQ.Framework.Messaging.MessageBase.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:IQ.Framework.Messaging.MessageBase.MessageType">
            <summary>
            The type of message.
            </summary>
            <value>The type of the message.</value>
        </member>
        <member name="P:IQ.Framework.Messaging.MessageBase.XMLType">
            <summary>
            Returns the AssemblyQualifiedName as an XML attribute for XMLSerialization
            </summary>
        </member>
        <member name="T:IQ.Framework.Messages.AppUserMustBeSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Messages.AppUserMustBeSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Messages.AppUserMustBeSet"/> class.
            </summary>
        </member>
        <member name="P:IQ.Framework.Messages.AppUserMustBeSet.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="T:IQ.Framework.Messages.AnonymousRequestsNotAllowed">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Messages.AnonymousRequestsNotAllowed.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Messages.AppUserMustBeSet"/> class.
            </summary>
        </member>
        <member name="P:IQ.Framework.Messages.AnonymousRequestsNotAllowed.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="T:IQ.Framework.Messages.ArgumentException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Messages.ArgumentException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Messages.UnexpectedError"/> class.
            </summary>
        </member>
        <member name="P:IQ.Framework.Messages.ArgumentException.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="T:IQ.Framework.Messages.UnexpectedError">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Messages.UnexpectedError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Messages.UnexpectedError"/> class.
            </summary>
        </member>
        <member name="P:IQ.Framework.Messages.UnexpectedError.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="M:IQ.Framework.Messages.UnknownBindingType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Messages.UnknownBindingType"/> class.
            </summary>
            <param name="bindingTypeName">Name of the binding type.</param>
        </member>
        <member name="P:IQ.Framework.Messages.UnknownBindingType.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="T:IQ.Framework.Messages.UnknownContractType">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Messages.UnknownContractType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Messages.UnknownContractType"/> class.
            </summary>
            <param name="contractTypeName">Name of the contract type.</param>
        </member>
        <member name="P:IQ.Framework.Messages.UnknownContractType.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="T:IQ.Framework.Messages.DataRetrievalReturnedMoreThanOneObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Messages.DataRetrievalReturnedMoreThanOneObject.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Messages.DataRetrievalReturnedMoreThanOneObject"/> class.
            </summary>
            <param name="entityName">Name of the entity.</param>
            <param name="actualCount">The actual count.</param>
        </member>
        <member name="P:IQ.Framework.Messages.DataRetrievalReturnedMoreThanOneObject.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="T:IQ.Framework.POCO.POCOMapAttribute">
            <summary>
            Exposes attributes and properties to help the mapping mechanism take a datarow/datatable/dataset and merge it into a class object
            </summary>
        </member>
        <member name="M:IQ.Framework.POCO.Transformer.Transform(System.Object,System.Data.DataSet,IQ.Framework.POCO.Direction)">
            <summary>
            DataSet to Poco Transformer.
            This transformer will transform a DataSet to an object that is a container for POCO collections (Parent Object).
            It cannot currently transform from the POCO to the DataSet because the Transform function from POCO to DataTable needs the lambda for the default
            row for each table which can not be discovered at this level.
            </summary>
            <param name="input">The parent object</param>
            <param name="ds">The dataset</param>
            <param name="direction">The direction for the transformation.  Will always fail going Direction.FromPoco.</param>
        </member>
        <member name="M:IQ.Framework.POCO.Transformer.Transform(System.Object,System.Data.DataTable,IQ.Framework.POCO.Direction,System.Func{System.Data.DataRow})">
            <summary>
            DataTable to/from Poco.
            This transformer will transform a DataTable to/from a POCO collection object.  In order to create new rows when Direction.FromPoco,
            a lambda that creates a defaulted row must be passed in to createNewRow.
            Ex: Transformer.Transform(pocoTableInstance, dataTableInstance, Direction.FromPoco, () => dataTableInstance.NewDefaulted());
            </summary>
            <param name="input">The POCO collection object.</param>
            <param name="dt">The datatable.</param>
            <param name="direction">The direction for the transformation.</param>
            <param name="createNewRow">The lambda to get a new (and defaulted row). Required if Adding new rows to the DataTable.
                                       Ex: () => PricingAndCommissionSheetDataInstance.PricingAndCommissionSheets.NewDefaulted()</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IQ.Framework.POCO.Transformer.Transform``1(System.Collections.Generic.IList{``0},System.Data.DataTable,IQ.Framework.POCO.Direction,System.Func{System.Data.DataRow})" -->
        <member name="M:IQ.Framework.POCO.Transformer.Transform(System.Object,System.Data.DataRow,IQ.Framework.POCO.Direction)">
            <summary>
            DataRow to/from Poco.
            This transformer will transform a DataRow to/from a POCO object.
            </summary>
            <param name="input">POCO object</param>
            <param name="row">DataRow</param>
            <param name="direction">The direction for the transformation</param>
        </member>
        <member name="M:IQ.Framework.POCO.Transformer.TransformLegacyObject(System.Object,System.Object,IQ.Framework.POCO.Direction)">
            <summary>
            Transform between a POCO and a VB Legacy Data object.
            </summary>
            <param name="pocoObject">The POCO object</param>
            <param name="legacyObject">The VB legacy data object</param>
            <param name="direction">The direction of the transformation</param>
        </member>
        <member name="M:IQ.Framework.POCO.Transformer.SetValues(System.Object,System.Data.DataRow,IQ.Framework.POCO.Direction,System.Type,System.Reflection.MemberInfo,System.String,IQ.Framework.POCO.POCOMapAttribute)">
            <summary>
            This function sets the values in the POCO or the DataRow.
            </summary>
            <param name="input"></param>
            <param name="row"></param>
            <param name="direction"></param>
            <param name="objectType"></param>
            <param name="member"></param>
            <param name="name"></param>
            <param name="att"></param>
        </member>
        <member name="M:IQ.Framework.POCO.Transformer.PocoGetMatchingRow(System.Object,System.Data.DataTable)">
            <summary>
            Gets a datarow that matches the given Poco Object based on the primary key columns of the data table
            </summary>
            <param name="PocoItem">The Poco object to try to match.</param>
            <param name="TableToCheck">The data table to look for a match in.</param>
            <returns>The matched row or null row if not found.</returns>
        </member>
        <member name="M:IQ.Framework.Rest.RestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:IQ.Framework.Rest.RestServiceBase">
            <summary>
            The base class for all Rest Services
            </summary>
        </member>
        <member name="T:IQ.Framework.Security.SecuritySessionManager">
            <summary>
            This class will manage the security token for the security sub system
            </summary>
        </member>
        <member name="T:IQ.Framework.ServiceModelExtensions.UserContextEndpointBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.ServiceModelExtensions.UserContextEndpointBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.ServiceModelExtensions.UserContextEndpointBehavior"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.ServiceModelExtensions.UserContextEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Implement to pass data at runtime to bindings to support custom behavior.
            </summary>
            <param name="endpoint">The endpoint to modify.</param>
            <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
        </member>
        <member name="M:IQ.Framework.ServiceModelExtensions.UserContextEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            Implements a modification or extension of the client across an endpoint.
            </summary>
            <param name="endpoint">The endpoint that is to be customized.</param>
            <param name="clientRuntime">The client runtime to be customized.</param>
        </member>
        <member name="M:IQ.Framework.ServiceModelExtensions.UserContextEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            Applies the dispatch behavior.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <param name="endpointDispatcher">The endpoint dispatcher.</param>
        </member>
        <member name="T:IQ.Framework.ServiceModelExtensions.UserContextMessageInspector">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.ServiceModelExtensions.UserContextMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary>
            Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.
            </summary>
            <param name="reply">The message to be transformed into types and handed back to the client application.</param>
            <param name="correlationState">Correlation state data.</param>
        </member>
        <member name="M:IQ.Framework.ServiceModelExtensions.UserContextMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
            <summary>
            Enables inspection or modification of a message before a request message is sent to a service.
            </summary>
            <param name="request">The message to be sent to the service.</param>
            <param name="channel">The WCF client object channel.</param>
            <returns>
            The object that is returned as the <c>correlationState</c> argument of the <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)"/> method. This is null if no correlation state is used.The best practice is to make this a <see cref="T:System.Guid"/> to ensure that no two <c>correlationState</c> objects are the same.
            </returns>
        </member>
        <member name="M:IQ.Framework.ServiceModelExtensions.UserContextMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
            <summary>
            Called after an inbound message has been received but before the message is dispatched to the intended operation.
            </summary>
            <param name="request">The request message.</param>
            <param name="channel">The incoming channel.</param>
            <param name="instanceContext">The current service instance.</param>
            <returns>
            The object used to correlate state. This object is passed back in the <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)"/> method.
            </returns>
        </member>
        <member name="M:IQ.Framework.ServiceModelExtensions.UserContextMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary>
            Called after the operation has returned but before the reply message is sent.
            </summary>
            <param name="reply">The reply message. This value is null if the operation is one way.</param>
            <param name="correlationState">The correlation object returned from the <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)"/> method.</param>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationConfigurationSetting.ApplicationServers">
            <summary>
            Gets or sets the application servers.
            </summary>
            <value>The application servers.</value>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationConfigurationManager.GetApplicationConfiguration">
            <summary>
            Gets the application configuration.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ApplicationConfigurationManager.AddApplicationConfiguration(IQ.Framework.Configuration.ApplicationServer[])">
            <summary>
            Adds the application configuration.
            </summary>
            <param name="servers">The servers.</param>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationConfigurationManager.ApplicationConfiguration">
            <summary>
            Gets the application configuration.
            </summary>
            <value>The application configuration.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.ApplicationConfigurationSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationConfigurationSettings.ApplicationConfigurationAddress">
            <summary>
            Gets or sets the application configuration address.
            </summary>
            <value>The application configuration address.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationConfigurationSettings.UseSSL">
            <summary>
            Gets or sets the use SSL.
            </summary>
            <value>The use SSL.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.ApplicationServer">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationServer.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationServer.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationServer.Address">
            <summary>
            Gets the address.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ApplicationServer.UseSSL">
            <summary>
            Gets a value indicating whether [use SSL].
            </summary>
            <value><c>true</c> if [use SSL]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.BusinessServerAssemblySetting">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.BusinessServerAssemblySetting"/> class.
            </summary>
        </member>
        <member name="P:IQ.Framework.Configuration.BusinessServerAssemblySetting.Name">
            <summary>
            Gets or sets the name of the assembly.
            </summary>
            <value>The name of the assembly.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.BusinessServerAssemblySetting.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.BusinessServerAssemblySetting.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.Add(IQ.Framework.Configuration.BusinessServerAssemblySetting)">
            <summary>
            Adds the specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>
            Adds a configuration element to the configuration element collection.
            </summary>
            <param name="index">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.</param>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to add.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.IndexOf(IQ.Framework.Configuration.BusinessServerAssemblySetting)">
            <summary>
            Indexes the of.
            </summary>
            <param name="settings">The settings.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.Remove(IQ.Framework.Configuration.BusinessServerAssemblySetting)">
            <summary>
            Removes the specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:IQ.Framework.Configuration.BusinessServerAssemblySetting"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:IQ.Framework.Configuration.BusinessServerAssemblySettingsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:IQ.Framework.Configuration.BusinessServerAssemblySetting"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:IQ.Framework.Configuration.BusinessServerSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Configuration.BusinessServerSettings.Assemblies">
            <summary>
            Gets the assemblies.
            </summary>
            <value>The assemblies.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.BusinessServerSettings.Binary">
            <summary>
            Gets or sets the binary.
            </summary>
            <value>The binary.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.ClientConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ClientConfiguration"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientConfiguration.GetClientServiceConfiguration``1">
            <summary>
            Gets the client service configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientConfiguration.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientConfiguration.Services">
            <summary>
            Gets or sets the services.
            </summary>
            <value>The services.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.ClientServerSetting">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ClientServerSetting"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSetting.#ctor(System.String,IQ.Framework.Configuration.ClientServerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ClientServerSetting"/> class.
            </summary>
            <param name="serverName">Name of the server.</param>
            <param name="defaultSection">The default section.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSetting.#ctor(IQ.Framework.Configuration.ClientServerSettings,IQ.Framework.Configuration.RemoteClientServerSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ClientServerSetting"/> class.
            </summary>
            <param name="defaultSection">The default section.</param>
            <param name="remoteSetting">The remote setting.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSetting.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ClientServerSetting"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="activationType">Type of the activation.</param>
            <param name="address">The address.</param>
            <param name="port">The port.</param>
            <param name="binary">The binary.</param>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSetting.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSetting.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSetting.ActivationType">
            <summary>
            Gets or sets the type of the activation.
            </summary>
            <value>The type of the activation.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSetting.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSetting.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSetting.Binary">
            <summary>
            Gets or sets the binary.
            </summary>
            <value>The binary.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.ClientServerSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSettings.Servers">
            <summary>
            Gets the servers.
            </summary>
            <value>The servers.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSettings.ActivationType">
            <summary>
            Gets or sets the type of the activation.
            </summary>
            <value>The type of the activation.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSettings.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSettings.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSettings.Binary">
            <summary>
            Gets or sets the binary.
            </summary>
            <value>The binary.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.ClientServerSettingsCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ClientServerSettingsCollection"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.Add(IQ.Framework.Configuration.ClientServerSetting)">
            <summary>
            Adds the specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>
            Adds a configuration element to the configuration element collection.
            </summary>
            <param name="index">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.</param>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to add.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.IndexOf(IQ.Framework.Configuration.ClientServerSetting)">
            <summary>
            Indexes the of.
            </summary>
            <param name="settings">The settings.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.Remove(IQ.Framework.Configuration.ClientServerSetting)">
            <summary>
            Removes the specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ClientServerSettingsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSettingsCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:IQ.Framework.Configuration.ClientServerSetting"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:IQ.Framework.Configuration.ClientServerSettingsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:IQ.Framework.Configuration.ClientServerSetting"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:IQ.Framework.Configuration.ClientServiceConfiguration">
            <summary>
            All of the information required to start a WCF service
            </summary>
        </member>
        <member name="T:IQ.Framework.Configuration.ConnectionManagerSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Configuration.ConnectionManagerSettings.PollingInterval">
            <summary>
            Gets the polling interval.
            </summary>
            <value>The polling interval.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.ConnectionManagerSettings.InitializeData">
            <summary>
            Gets the initialize data.
            </summary>
            <value>The initialize data.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.ConfigurationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ConfigurationException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ConfigurationException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ConfigurationException"/> class.
            </summary>
            <param name="oMessage">The o message.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.ConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.ConfigurationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:IQ.Framework.Configuration.Exceptions.ConfigurationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.Exceptions.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.Exceptions.ConfigurationException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.Exceptions.ConfigurationException.#ctor(IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:IQ.Framework.Configuration.IQSettingsSection">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Configuration.IQSettingsSection.SectionName">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.IQSettingsSection.SaveSettings">
            <summary>
            Saves the settings.
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.IQSettingsSection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>
            Gets a value indicating whether an unknown element is encountered during deserialization. and EAT it (ie don't care)
            </summary>
            <param name="elementName">The name of the unknown subelement.</param>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> object being used for deserialization.</param>
            <returns>
            true when an unknown element is encountered while deserializing.
            </returns>
        </member>
        <member name="M:IQ.Framework.Configuration.IQSettingsSection.GetSettings(System.Configuration.ConfigurationUserLevel)">
            <summary>
            Gets the settings.
            </summary>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Configuration.IQSettingsSection.Settings">
            <summary>
            Gets the IQ settings.
            </summary>
            <value>The IQ settings.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.IQSettingsSection.UserSettings">
            <summary>
            Gets the IQ user settings.
            </summary>
            <value>The IQ user settings.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.IQSettingsSection.Configuration">
            <summary>
            Gets or sets the configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.IQSettingsSection.ConnectionManagerSettings">
            <summary>
            Gets the connection manager settings.
            </summary>
            <value>The connection manager settings.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.IQSettingsSection.BusinessServerSettings">
            <summary>
            Gets the business server settings.
            </summary>
            <value>The business server settings.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.IQSettingsSection.ClientServerSettings">
            <summary>
            Gets the client server settings.
            </summary>
            <value>The client server settings.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.IQSettingsSection.WinFormStyleSettings">
            <summary>
            Gets the tracing settings.
            </summary>
            <value>The tracing settings.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.RemoteClientServerSetting">
            <summary>
            A Serializable version of the ClientServerSettings to be sent to the remoting client on first connection
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.RemoteClientServerSetting.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.RemoteClientServerSetting"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="activationType">Type of the activation.</param>
            <param name="address">The address.</param>
            <param name="port">The port.</param>
            <param name="binary">The binary.</param>
        </member>
        <member name="M:IQ.Framework.Configuration.RemoteClientServerSetting.#ctor(IQ.Framework.Configuration.ClientServerSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Configuration.RemoteClientServerSetting"/> class.
            </summary>
            <param name="setting">The setting.</param>
        </member>
        <member name="P:IQ.Framework.Configuration.RemoteClientServerSetting.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.RemoteClientServerSetting.ActivationType">
            <summary>
            Gets or sets the type of the activation.
            </summary>
            <value>The type of the activation.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.RemoteClientServerSetting.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.RemoteClientServerSetting.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.RemoteClientServerSetting.Binary">
            <summary>
            Gets or sets the binary.
            </summary>
            <value>The binary.</value>
        </member>
        <member name="T:IQ.Framework.Configuration.UserContextEndpointBehaviorElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Configuration.UserContextEndpointBehaviorElement.CreateBehavior">
            <summary>
            Creates a behavior extension based on the current configuration settings.
            </summary>
            <returns>The behavior extension.</returns>
        </member>
        <member name="P:IQ.Framework.Configuration.UserContextEndpointBehaviorElement.BehaviorType">
            <summary>
            Gets the type of behavior.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="T:IQ.Framework.Configuration.WinFormStyleSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Configuration.WinFormStyleSettings.StyleFileName">
            <summary>
            Gets or sets the name of the style file.
            </summary>
            <value>The name of the style file.</value>
        </member>
        <member name="P:IQ.Framework.Configuration.WinFormStyleSettings.ThrowExceptionOnError">
            <summary>
            Gets or sets a value indicating whether [throw exception on error].
            </summary>
            <value>
            	<c>true</c> if [throw exception on error]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IQ.Framework.Connections.ClientConnectionParameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Connections.ConnectionParametersAbstract">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Connections.IConnectionParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionParameters.HasToken">
            <summary>
            Determines whether this instance has token.
            </summary>
            <returns>
            	<c>true</c> if this instance has token; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionParametersAbstract.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.ConnectionParametersAbstract"/> class.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionParametersAbstract.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.ConnectionParametersAbstract"/> class.
            </summary>
            <param name="environment">The environment.</param>
            <param name="application">The application.</param>
            <param name="version">The version.</param>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionParametersAbstract.HasToken">
            <summary>
            Determines whether this instance has token.
            </summary>
            <returns>
            	<c>true</c> if this instance has token; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:IQ.Framework.Connections.ConnectionParametersAbstract.Application">
            <summary>
            Gets the application.
            </summary>
            <value>The application.</value>
        </member>
        <member name="P:IQ.Framework.Connections.ConnectionParametersAbstract.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:IQ.Framework.Connections.ConnectionParametersAbstract.Environment">
            <summary>
            Gets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="M:IQ.Framework.Connections.ClientConnectionParameters.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.ClientConnectionParameters"/> class.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:IQ.Framework.Connections.ClientConnectionParameters.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.ClientConnectionParameters"/> class.
            </summary>
            <param name="client">The client.</param>
            <param name="environment">The environment.</param>
            <param name="application">The application.</param>
            <param name="version">The version.</param>
        </member>
        <member name="M:IQ.Framework.Connections.ClientConnectionParameters.HasToken">
            <summary>
            Determines whether this instance has token.
            </summary>
            <returns>
            	<c>true</c> if this instance has token; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Connections.ClientConnectionParameters.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:IQ.Framework.Connections.ClientConnectionParameters.Client">
            <summary>
            Gets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="T:IQ.Framework.Connections.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Connections.Connection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.Connection"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="applicationName">Name of the application.</param>
            <param name="version">The version.</param>
            <param name="client">The client.</param>
            <param name="environment">The environment.</param>
            <param name="token">The token.</param>
            <param name="serverName">Name of the server.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="provider">The provider.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="integratedSecurity">if set to <c>true</c> [integrated security].</param>
            <param name="timeOut">The time out.</param>
            <param name="encrypted">if set to <c>true</c> [encrypted].</param>
            <param name="other">The other.</param>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.DatabaseName">
            <summary>
            Gets or sets the name of the database.
            </summary>
            <value>The name of the database.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.IntegratedSecurity">
            <summary>
            Gets or sets a value indicating whether [integrated security].
            </summary>
            <value><c>true</c> if [integrated security]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.TimeOut">
            <summary>
            Gets or sets the time out.
            </summary>
            <value>The time out.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Encrypted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:IQ.Framework.Connections.Connection"/> is encrypted.
            </summary>
            <value><c>true</c> if encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Other">
            <summary>
            Gets or sets the other.
            </summary>
            <value>The other.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.ConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.ApplicationName">
            <summary>
            Gets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="P:IQ.Framework.Connections.Connection.DecryptedPassword">
            <summary>
            Sets the decrypted password.
            </summary>
            <value>The decrypted password.</value>
        </member>
        <member name="T:IQ.Framework.Exceptions.ConnectionException">
            <summary>
            Throw when any type of error occurs within the Connection String Server
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionException"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionException.#ctor(IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="T:IQ.Framework.Connections.ConnectionParameterFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionParameterFactory.CreateParameters(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Creates the parameters.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionParameterFactory.CreateParameters(IQ.Framework.Security.ISecurityUser,System.String)">
            <summary>
            Creates the parameters.
            </summary>
            <param name="user">The user.</param>
            <param name="databaseName">Name of the database.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Exceptions.ConnectionServiceException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionServiceException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ConnectionServiceException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ConnectionServiceException"/> class.
            </summary>
            <param name="oMessage">The o message.</param>
        </member>
        <member name="T:IQ.Framework.Connections.ConnectionsManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionsManager.GetConnection">
            <summary>
            Gets the connection setting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionsManager.GetConnections(IQ.Framework.Connections.IConnectionParameters)">
            <summary>
            Gets the connections based on the parameters
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionsManager.GetAllConnections">
            <summary>
            Gets all connections.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionsManager.AddConnection(IQ.Framework.Connections.Connection)">
            <summary>
            Adds the connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionsManager.DeleteConnection(System.String,System.String)">
            <summary>
            Delete a connection by databasename and environment
            </summary>
            <param name="databaseName"></param>
            <param name="environment"></param>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionsManager.DeleteConnection(System.Guid,System.String,System.String,System.String)">
            <summary>
            Delete a connection by client, environment, application and version
            </summary>
            <param name="client"></param>
            <param name="environment"></param>
            <param name="application"></param>
            <param name="version"></param>
        </member>
        <member name="M:IQ.Framework.Connections.ConnectionsManager.DeleteConnection(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a connection by Token, environment, application and version
            </summary>
            <param name="token"></param>
            <param name="environment"></param>
            <param name="application"></param>
            <param name="version"></param>
        </member>
        <member name="T:IQ.Framework.Connections.DatabaseNameConnectionParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Connections.DatabaseNameConnectionParameters.#ctor(IQ.Framework.Security.ISecurityUser,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.DatabaseNameConnectionParameters"/> class.
            </summary>
            <param name="user">The user.</param>
            <param name="databaseName">Name of the database.</param>
        </member>
        <member name="M:IQ.Framework.Connections.DatabaseNameConnectionParameters.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.DatabaseNameConnectionParameters"/> class.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="environment">The environment.</param>
            <param name="application">The application.</param>
            <param name="version">The version.</param>
        </member>
        <member name="M:IQ.Framework.Connections.DatabaseNameConnectionParameters.HasToken">
            <summary>
            Determines whether this instance has token.
            </summary>
            <returns>
            	<c>true</c> if this instance has token; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:IQ.Framework.Connections.DatabaseNameConnectionParameters.DatabaseName">
            <summary>
            Gets or sets the name of the database.
            </summary>
            <value>The name of the database.</value>
        </member>
        <member name="T:IQ.Framework.Connections.IConnectionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.GetClientConnection(IQ.Framework.Connections.ClientConnectionParameters)">
            <summary>
            Gets the client connection.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.GetTokenConnection(IQ.Framework.Connections.TokenConnectionParameters)">
            <summary>
            Gets the token connection.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.GetDatabaseNameConnection(IQ.Framework.Connections.DatabaseNameConnectionParameters)">
            <summary>
            Gets the database name connection.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.GetAllConnections">
            <summary>
            Gets all connections.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.GetClientConnections(IQ.Framework.Connections.ClientConnectionParameters)">
            <summary>
            Gets the connections.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.GetTokenConnections(IQ.Framework.Connections.TokenConnectionParameters)">
            <summary>
            Gets the token connections.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.AddConnection(IQ.Framework.Connections.Connection)">
            <summary>
            Adds the connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.EditConnection(IQ.Framework.Connections.Connection)">
            <summary>
            Edits the connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:IQ.Framework.Connections.IConnectionService.DeleteConnection(IQ.Framework.Connections.Connection)">
            <summary>
            Deletes the connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="T:IQ.Framework.Connections.Messages">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Connections.Messages.ConnectionDoesntExist">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Connections.Messages.ConnectionDoesntExist.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.Messages.ConnectionDoesntExist"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:IQ.Framework.Connections.Messages.ConnectionDoesntExist.ResourceMessage">
            <summary>
            Gets the resource message.
            </summary>
            <value>The resource message.</value>
        </member>
        <member name="T:IQ.Framework.Connections.TokenConnectionParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Connections.TokenConnectionParameters.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.TokenConnectionParameters"/> class.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:IQ.Framework.Connections.TokenConnectionParameters.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Connections.TokenConnectionParameters"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="environment">The environment.</param>
            <param name="application">The application.</param>
            <param name="version">The version.</param>
        </member>
        <member name="M:IQ.Framework.Connections.TokenConnectionParameters.HasToken">
            <summary>
            Determines whether this instance has token.
            </summary>
            <returns>
            	<c>true</c> if this instance has token; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Connections.TokenConnectionParameters.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:IQ.Framework.Connections.TokenConnectionParameters.Token">
            <summary>
            Gets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="T:IQ.Framework.DAL.DataRowBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataRowBase.#ctor(System.Data.DataRowBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataRowBase"/> class.
            </summary>
            <param name="builder">builder</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataRowBase.IsColumnModified(System.Data.DataColumn)">
            <summary>
             Is this column modified?
            </summary>
        </member>
        <member name="P:IQ.Framework.DAL.DataRowBase.Modified">
             <summary>
             Determins if this object has been modified
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.DataSessionManager">
            <summary>
            This static class is a factory for DataSessions.  It will instantiate and configure
            the datasession object depending on the token passed in.
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataSessionManager.DataSession">
            <summary>
            Create a new Datasession using SecurityUser Settings
            of a  parameter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DatasetUtilities.CopyColumn(System.Data.DataColumn)">
            <summary>
            Copy the Properties of the datacolumn passed in, and return a new datacolumn based on the properties
            </summary>
            <param name="voDataColumn"></param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DatasetUtilities.CopyColumn(System.Data.DataColumn,System.String)">
            <summary>
            Copy a column with a new name
            </summary>
            <param name="voDataColumn"></param>
            <param name="vsColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DatasetUtilities.BuildFilterExpression(System.Data.DataColumn,System.Data.DataRow)">
            <summary>
            Build a filter expression using a column and a datarow for the said column
            </summary>
            <param name="voColumn"></param>
            <param name="voDR"></param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DatasetUtilities.BuildFilterExpression(System.Data.DataColumn,System.Object)">
            <summary>
            Build a filter expression using a column and a value
            </summary>
            <param name="voColumn"></param>
            <param name="voValue"></param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DatasetUtilities.SelectDistinct(System.Data.DataTable,System.Data.DataColumn[])">
            <summary>
            Selects the unique values from a datatable for a given set of columns
            </summary>
            <param name="table">The table from which the values are to be selected.</param>
            <param name="columns">The columns for which unique values are to be selected.</param>
            <returns>A datatable containing the unique values</returns>
        </member>
        <member name="M:IQ.Framework.DAL.DatasetUtilities.SelectDistinct(System.Data.DataTable,System.String,System.Data.DataColumn[])">
            <summary>
            Selects the unique values from a datatable for a given set of columns
            </summary>
            <param name="table">The table from which the values are to be selected.</param>
            <param name="filter">The filter.</param>
            <param name="columns">The columns for which unique values are to be selected.</param>
            <returns>A datatable containing the unique values</returns>
        </member>
        <member name="M:IQ.Framework.DAL.DatasetUtilities.BuildFilterExpression(System.Object[])">
            <summary>
            Build a filter expression using pairs of column / values
            </summary>
            <example>BuildFilterExpression(oDataRow.Table.ColumnAColumn, 5,oDataRow.Table.ColumnBColumn, "test")</example>
            <param name="voColumnValuePairs"></param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.DAL.DataTableBase`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.DataTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataTableBase`1"/> class.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that contains data to construct the object.</param>
            <param name="context">The streaming context for the object being deserializad.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataTableBase`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataTableBase`1"/> class.
            </summary>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataTableBase`1.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.DataTableBase`1"/> class.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:IQ.Framework.DAL.DataTableBase`1.SelectSingleRow(System.String)">
            <summary>
            Selects the single row.
            </summary>
            <param name="filterExpression">The filter expression.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataTableBase`1.SelectSingleRow(System.String,System.Data.DataViewRowState)">
            <summary>
            Selects the single row.
            </summary>
            <param name="filterExpression">The filter expression.</param>
            <param name="recordStates">The record states.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataTableBase`1.NewDefaulted">
            <summary>
            News the defaulted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataTableBase`1.Add">
            <summary>
            Adds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.DataTableBase`1.New">
            <summary>
             Returns a new object but doesn't add it to this object
            </summary>
        </member>
        <member name="P:IQ.Framework.DAL.DataTableBase`1.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:IQ.Framework.DAL.ICacheableDataTable">
            <summary>
            This class defines the Data Table as being Cachable. 
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.IDALDataSet">
            <summary>
            Interface for the Dataset.  It implements the InitRelations that is used when the dataset needs
            to refresh the relations.  Specifically, when a table is removed and then added again.
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.IDALDataSet.InitRelations">
            <summary>
            Inits the relations.
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.ILocalizable">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.SchemaCollectionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.SchemaCollectionType.Tables">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.SchemaCollectionType.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.SchemaCollectionType.IndexColumns">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.SchemaCollectionType.MetaDataCollections">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.ISchemaDataSession">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.ISchemaDataSession.GetSchema(IQ.Framework.DAL.SchemaCollectionType)">
            <summary>
            Gets the schema.
            </summary>
            <param name="schemaType">Type of the schema.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.ISchemaDataSession.GetSchema(IQ.Framework.DAL.SchemaCollectionType,System.String[])">
            <summary>
            Gets the schema.
            </summary>
            <param name="voSchemaType">Type of the vo schema.</param>
            <param name="voRestrictions">The vo restrictions.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.DAL.ISchemaDataSession.GetMetaDataCollections(System.String)">
            <summary>
            Gets the meta data collections.
            </summary>
            <param name="dbMetaDataCollectionName">Name of the db meta data collection.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.DAL.ISchemaRestrictions">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.ISchemaRestrictions.GetRestrictions">
            <summary>
            Gets the restrictions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.DAL.TableRestrictions">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.TableRestrictions.Catalog">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.TableRestrictions.Schema">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.TableRestrictions.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.TableRestrictions.TableType">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.TableRestrictions.GetRestrictions">
            <summary>
            Gets the restrictions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.DAL.TableRestrictions.TableTypeEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.TableRestrictions.TableTypeEnum.VIEW">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.TableRestrictions.TableTypeEnum.BASETABLE">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.ColumnRestrictions">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.ColumnRestrictions.TableCatalog">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.ColumnRestrictions.TableSchema">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.ColumnRestrictions.TableName">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.DAL.ColumnRestrictions.ColumnName">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.ColumnRestrictions.GetRestrictions">
            <summary>
            Gets the restrictions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.DAL.SourceColumnMapping">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.DAL.SourceColumnMapping.#ctor(System.Data.DataColumn,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.SourceColumnMapping"/> class.
            </summary>
            <param name="column">The column.</param>
            <param name="sourceColumnName">Name of the source column.</param>
            <param name="sourceTableName">Name of the source table.</param>
        </member>
        <member name="P:IQ.Framework.DAL.SourceColumnMapping.Column">
            <summary>
            Gets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:IQ.Framework.DAL.SourceColumnMapping.SourceColumnName">
            <summary>
            Gets the name of the source column.
            </summary>
            <value>The name of the source column.</value>
        </member>
        <member name="P:IQ.Framework.DAL.SourceColumnMapping.SourceTableName">
            <summary>
            Gets the name of the source table.
            </summary>
            <value>The name of the source table.</value>
        </member>
        <member name="T:IQ.Framework.Diagnostics.Contexts.Exceptions.AppUserXML">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Contexts.Exceptions.AppUserXML.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Contexts.Exceptions.AppUserXML"/> class.
            </summary>
            <param name="appUser">The app user.</param>
        </member>
        <member name="T:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionContextV1">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionContextV1.AppUser">
            <summary>
            Gets the app user.
            </summary>
            <value>The app user.</value>
        </member>
        <member name="P:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionContextV1.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="T:IQ.Framework.Diagnostics.ExceptionLogger">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionLogger.LogException(System.Exception)">
            <summary>
            Logs the exception - Always an error.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionLogger.LogException(System.Diagnostics.TraceEventType,System.Exception)">
            <summary>
            Logs the exception.
            </summary>
            <param name="eventType">Type of the event.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ExceptionLogger.DistillException(System.Exception)">
            <summary>
            Distills the exception.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="F:IQ.Framework.Diagnostics.frmConsole.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.frmConsole.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.frmConsole.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ILoggingService.LogMessage(IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionContextV1)">
            <summary>
            Logs the message.
            </summary>
            <param name="exceptionContext">The exception context.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Diagnostics.ILoggingService.FAFLogServiceMessage(System.String)">
            <summary>
            Used to log RESTful service call interactions between a client (likely external user) and IQ systems
            </summary>
            <param name="messageXML">Serialized message represented as a string</param>
            <remarks>Uses UserContext to determine Client and CallReferenceKey to link requests and responses, both handled by this service</remarks>
        </member>
        <member name="M:IQ.Framework.Diagnostics.LoggingResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.LoggingResponseException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.LoggingResponseException.#ctor(IQ.Framework.Diagnostics.LoggingResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.LoggingResponseException"/> class.
            </summary>
            <param name="response">The message.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.LoggingResponseException.#ctor(IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.LoggingResponseException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.LoggingResponseException.#ctor(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.LoggingResponseException"/> class.
            </summary>
            <param name="messageCollection">The message collection.</param>
        </member>
        <member name="T:IQ.Framework.Diagnostics.Tracer">
            <summary>
            This class will allow the programmer to embed tracing at various different event levels
            into important areas of your code.  Ensure that you using a "Using" clause to trace
            the entire method.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Tracer"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.#ctor(System.Diagnostics.TraceEventType)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Tracer"/> class.
            </summary>
            <param name="traceEventType">Type of the trace event.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Tracer"/> class.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.#ctor(System.Diagnostics.TraceEventType,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Tracer"/> class.
            </summary>
            <param name="traceEventType">Type of the trace event.</param>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Tracer"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.#ctor(System.Diagnostics.TraceEventType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Tracer"/> class.
            </summary>
            <param name="traceEventType">Type of the trace event.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.#ctor(System.Diagnostics.TraceEventType,System.Reflection.MethodBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Tracer"/> class.
            </summary>
            <param name="traceEventType">Type of the trace event.</param>
            <param name="methodBase">The method base.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.#ctor(System.Reflection.MethodBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Tracer"/> class.
            </summary>
            <param name="methodBase">The method base.</param>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Tracer.GetMachineName">
            <summary>
            Gets the name of the machine.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Exceptions.AppUserMustBeSetException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.AppUserMustBeSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.AppUserMustBeSetException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.AppUserMustBeSetException"/> class.
            </summary>
        </member>
        <member name="T:IQ.Framework.Linq.DataContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Linq.DataContext.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Linq.DataContext"/> class.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:IQ.Framework.Linq.DataContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Linq.DataContext"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Linq.DataContext.#ctor(System.Data.Linq.Mapping.MappingSource)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Linq.DataContext"/> class.
            </summary>
            <param name="mappingSource">The mapping source.</param>
        </member>
        <member name="M:IQ.Framework.Linq.DataContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Linq.DataContext"/> class.
            </summary>
            <param name="fileOrServerOrConnection">The file or server or connection.</param>
        </member>
        <member name="M:IQ.Framework.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Linq.DataContext"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="mapping">The mapping.</param>
        </member>
        <member name="M:IQ.Framework.Linq.DataContext.#ctor(System.Data.IDbConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Linq.DataContext"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:IQ.Framework.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Linq.DataContext"/> class.
            </summary>
            <param name="fileOrServerOrConnection">The file or server or connection.</param>
            <param name="mapping">The mapping.</param>
        </member>
        <member name="M:IQ.Framework.Linq.DataContext.ResolveIDbConnection(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Resolves the I db connection.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Patterns.ModelViewController.UserControlModeEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Patterns.ModelViewController.UserControlModeEnum.ViewMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Patterns.ModelViewController.IController">
            <summary>
            Used to identify a controller
            </summary>
        </member>
        <member name="M:IQ.Framework.Patterns.ModelViewController.IController.SaveModel">
            <summary>
            Saves the model.
            Put all logic in here to save the model. (ie call business service to save data to the DB)
            Called by SaveForm when Validate and MoveDataToModel are successfull (ie No Errors)
            </summary>
        </member>
        <member name="T:IQ.Framework.Patterns.ModelViewController.ILayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Patterns.ModelViewController.ILayout.InitializeViews(IQ.Framework.Patterns.ModelViewController.IModel)">
            <summary>
            Initializes the views.
            </summary>
        </member>
        <member name="M:IQ.Framework.Patterns.ModelViewController.ILayout.SaveViews(IQ.Framework.Messaging.MessageTypeEnum)">
            <summary>
            Saves the views.
            </summary>
            <param name="invalidMessageType">The types of messages that will cause the save to fail.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Patterns.ModelViewController.IModel">
            <summary>
            Interface used to identify a Model
            </summary>
        </member>
        <member name="T:IQ.Framework.Patterns.ModelViewController.IView">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Patterns.ModelViewController.IView.InitializeValidations">
            <summary>
            Initializes the validations.
            Called just before ValidateForm
            </summary>
        </member>
        <member name="M:IQ.Framework.Patterns.ModelViewController.IView.ValidateView">
            <summary>
            Validates the form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Patterns.ModelViewController.IView.MoveDataToView">
            <summary>
            Moves the data to UI.
            Put all logic in here to move information from the Model to the User Interface.
            Called just before Show
            </summary>
        </member>
        <member name="M:IQ.Framework.Patterns.ModelViewController.IView.MoveDataToModel">
            <summary>
            Moves the data to model.
            Put all logic in here to move data from the UI back to the Model
            Called when ValidateForm returns True (ie No Errors)
            </summary>
        </member>
        <member name="M:IQ.Framework.Patterns.ModelViewController.IView.SaveView(IQ.Framework.Messaging.MessageTypeEnum)">
            <summary>
            Calls the appropriate methods on the views to save the views information to the model
            </summary>
            <param name="invalidMessageType">Types of messages that will cause validation to fail.</param>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Patterns.ModelViewController.IView.Controller">
            <summary>
            Gets the controller for this view
            </summary>
            <value>The controller.</value>
        </member>
        <member name="P:IQ.Framework.Patterns.ModelViewController.IView.Messages">
            <summary>
            Gets the messages.
            </summary>
            <value>The messages.</value>
        </member>
        <member name="T:IQ.Framework.Patterns.ModelViewController.ModelBaseAbstract">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.DAL.Exceptions.DataException`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.DAL.Exceptions.DataException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException`1.#ctor(`0,IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            This exception takes the error text from the workspace, then message and an innerException
            </summary>
            <param name="entity">The entity.</param>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:IQ.Framework.DAL.Exceptions.DataException`1.#ctor(System.Collections.Generic.ICollection{`0},IQ.Framework.Messaging.MessageBase,System.Exception)">
            <summary>
            This exception takes the error text from the workspace, then message and an innerException
            </summary>
            <param name="entitycollection">The entitycollection.</param>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:IQ.Framework.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.AnonymousRequestsNotAllowed">
            <summary>
              Looks up a localized string similar to Anonymous requests are not allowed..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ApplicationServerConfigurationCannotBeFound">
            <summary>
              Looks up a localized string similar to The application server configuration for {0} cannot be found.  Check Application Configuration..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.AppUserMustBeSet">
            <summary>
              Looks up a localized string similar to The AppUser must be set to proceed with this process..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ArgumentException">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ClientNotInAnyRole">
            <summary>
              Looks up a localized string similar to Client is not associated with any roles..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ClientNotInRole">
            <summary>
              Looks up a localized string similar to Client is not associated with the {0} role..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ClientValidationFailed">
            <summary>
              Looks up a localized string similar to There was an error validating the client credentials..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ConnectionAlreadyExists">
            <summary>
              Looks up a localized string similar to Connection {0} already exists..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ConnectionDoesntExist">
            <summary>
              Looks up a localized string similar to The Connection {0} doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.DataRetrievalReturnedMoreThanOneObject">
            <summary>
              Looks up a localized string similar to The data retrieval for {0} has returned more than one object.  It retrieved {1} objects..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.DataServiceCannotBeCreated">
            <summary>
              Looks up a localized string similar to The dataservice {0} cannot be created..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.DataServiceInterfaceMissingAttribute">
            <summary>
              Looks up a localized string similar to The dataservice interface {0} does not have a DataService attribute defined..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.EntityFieldError">
            <summary>
              Looks up a localized string similar to The entity field {0} has encountered an error..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.ErrorRetrievingClientID">
            <summary>
              Looks up a localized string similar to There was an error retrieving the client ID..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.InsertCouldNotBeVerified">
            <summary>
              Looks up a localized string similar to The insert could not be verified in {0}.
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.MissingSourceMapping">
            <summary>
              Looks up a localized string similar to The Column {0} does not have any source mapping information..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.OneRecordExpected">
            <summary>
              Looks up a localized string similar to The table {0} return {1} rows when 1 was expected..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.TableMappingsMustBeSet">
            <summary>
              Looks up a localized string similar to The workspace table mappings must be set..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.UnexpectedError">
            <summary>
              Looks up a localized string similar to An unexpected error has occured.{0}{1}.
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.UnknownBindingType">
            <summary>
              Looks up a localized string similar to The Binding Type {0} cannot be found..
            </summary>
        </member>
        <member name="P:IQ.Framework.Properties.Resources.UnknownContractType">
            <summary>
              Looks up a localized string similar to The Contract Type {0} cannot be found..
            </summary>
        </member>
        <member name="T:IQ.Framework.Security.AppUser">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.AppUser.Current">
            <summary>
            Gets the current user.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:IQ.Framework.BusinessServices.RemotingAssemblyAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.RemotingAssemblyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.BusinessServices.RemotingAssemblyAttribute"/> class.
            </summary>
            <param name="serverName">Name of the server.</param>
        </member>
        <member name="P:IQ.Framework.BusinessServices.RemotingAssemblyAttribute.ServerName">
            <summary>
            Gets the name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="T:IQ.Framework.BusinessServices.RemotingClientAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.RemotingClientAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.BusinessServices.RemotingClientAttribute"/> class.
            </summary>
            <param name="serverName">Name of the server.</param>
        </member>
        <member name="P:IQ.Framework.BusinessServices.RemotingClientAttribute.ServerName">
            <summary>
            Gets the name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="T:IQ.Framework.BusinessServices.RemotingServiceAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.BusinessServices.RemotingServiceAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.BusinessServices.RemotingServiceAttribute"/> class.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
        </member>
        <member name="M:IQ.Framework.BusinessServices.RemotingServiceAttribute.#ctor(System.Type,System.Runtime.Remoting.WellKnownObjectMode)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.BusinessServices.RemotingServiceAttribute"/> class.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="wellKnownObjectMode">The well known object mode.</param>
        </member>
        <member name="M:IQ.Framework.BusinessServices.RemotingServiceAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.BusinessServices.RemotingServiceAttribute"/> class.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="uniqueName">Name of the unique.</param>
        </member>
        <member name="M:IQ.Framework.BusinessServices.RemotingServiceAttribute.#ctor(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.BusinessServices.RemotingServiceAttribute"/> class.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="uniqueName">Name of the unique.</param>
            <param name="wellKnownObjectMode">The well known object mode.</param>
        </member>
        <member name="P:IQ.Framework.BusinessServices.RemotingServiceAttribute.InterfaceType">
            <summary>
            Gets the type of the interface.
            </summary>
            <value>The type of the interface.</value>
        </member>
        <member name="P:IQ.Framework.BusinessServices.RemotingServiceAttribute.UniqueName">
            <summary>
            Gets the name of the unique.
            </summary>
            <value>The name of the unique.</value>
        </member>
        <member name="P:IQ.Framework.BusinessServices.RemotingServiceAttribute.WellKnownObjectMode">
            <summary>
            Gets the well known object mode.
            </summary>
            <value>The well known object mode.</value>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.CollectionProxy`1">
            <summary>
            Wraps a <see cref="T:System.Collections.ICollection"/> object in a fuzzy strongly-typed generic wrapper.
            </summary>
            <typeparam name="T">The type of the items in the collection</typeparam>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CollectionProxy`1.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Collections.Generic.CollectionProxy`1"/> class.
            </summary>
            <param name="collection">The <see cref="T:System.Collections.ICollection"/> to wrap.</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CollectionProxy`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CollectionProxy`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CollectionProxy`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CollectionProxy`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CollectionProxy`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CollectionProxy`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CollectionProxy`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.CollectionProxy`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.CollectionProxy`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.ItemAddedEventHandler`1">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.ItemRemovedEventHandler`1">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.ItemInsertedEventHandler`1">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.ItemEventArgs`1">
            <summary>
            Encapsulates data associated with a ScheduleColumn event
            </summary>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.ItemEventArgs`1.#ctor(`0)">
            <summary>
            Creates a new ScheduleColumnEventArgs for the specified column
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.ItemEventArgs`1.Item">
            <summary>
            Gets the column associated with the event
            </summary>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.CustomList`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CustomList`1.OnAdded(IQ.Framework.Collections.Generic.ItemEventArgs{`0})">
            <summary>
            Raises the <see cref="E:Added"/> event.
            </summary>
            <param name="e">The <see cref="T:IQ.Framework.Collections.Generic.ItemEventArgs`1"/> instance containing the event data.</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CustomList`1.OnRemoved(IQ.Framework.Collections.Generic.ItemEventArgs{`0})">
            <summary>
            Raises the <see cref="E:Removed"/> event.
            </summary>
            <param name="e">The <see cref="T:IQ.Framework.Collections.Generic.ItemEventArgs`1"/> instance containing the event data.</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CustomList`1.OnInserted(IQ.Framework.Collections.Generic.ItemEventArgs{`0})">
            <summary>
            Raises the <see cref="E:Inserted"/> event.
            </summary>
            <param name="e">The <see cref="T:IQ.Framework.Collections.Generic.ItemEventArgs`1"/> instance containing the event data.</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CustomList`1.Add(`0)">
            <summary>
            Adds a new T to the end of the list
            </summary>
            <param name="item">The column to add</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CustomList`1.Remove(`0)">
            <summary>
            Removes a T from the list
            </summary>
            <param name="item">The column to remove</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CustomList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts a T into the list at a specified index
            </summary>
            <param name="index">The position where the column is to be inserted</param>
            <param name="item">The column to insert</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.CustomList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a range of Ts to the list
            </summary>
            <param name="collection">The columns to be added to the list</param>
        </member>
        <member name="E:IQ.Framework.Collections.Generic.CustomList`1.Added">
            <summary>
            Occurs when 
            </summary>
        </member>
        <member name="E:IQ.Framework.Collections.Generic.CustomList`1.Removed">
            <summary>
            Occurs when 
            </summary>
        </member>
        <member name="E:IQ.Framework.Collections.Generic.CustomList`1.Inserted">
            <summary>
            Occurs when 
            </summary>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.GuidList">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.EnumeratorProxy`1">
            <summary>
            Wraps a <see cref="T:System.Collections.IEnumerator"/> object in a fuzzy strongly-typed generic wrapper.
            </summary>
            <typeparam name="T">The type of the items in the collection.</typeparam>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.EnumeratorProxy`1.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Collections.Generic.EnumeratorProxy`1"/> class.
            </summary>
            <param name="enumerator">The <see cref="T:System.Collections.IEnumerator"/> to wrap.</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.EnumeratorProxy`1.Dispose">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.EnumeratorProxy`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.EnumeratorProxy`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.EnumeratorProxy`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.EnumeratorProxy`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.OrderedDictionary`2">
            <summary>
            A generic alternative to the non-generic <see cref="T:System.Collections.Specialized.OrderedDictionary"/> interface.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="T:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2">
            <summary>
            Wraps a <see cref="T:System.Collections.Specialized.OrderedDictionary"/> object in a fuzzy strongly-typed generic wrapper.
            </summary>
            <typeparam name="TKey">The type of the keys.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.#ctor(System.Collections.Specialized.IOrderedDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2"/> class.
            </summary>
            <param name="orderedDictionary">The <see cref="T:System.Collections.Specialized.OrderedDictionary"/> to wrap.</param>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Insert(System.Int32,`0,`1)">
            <summary>
            Inserts a key/value pair into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the key/value pair should be inserted.</param>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add. The value can be null.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is greater than System.Collections.ICollection.Count.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the System.Collections.Specialized.IOrderedDictionary collection.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.NotSupportedException">The System.Collections.Specialized.IOrderedDictionary collection is read-only.-or-The System.Collections.Specialized.IOrderedDictionary collection has a fixed size.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or- index is equal to or greater than System.Collections.ICollection.Count.</exception>
            <exception cref="T:System.NotSupportedException">The System.Collections.Specialized.IOrderedDictionary collection is read-only.-or-
            The System.Collections.Specialized.IOrderedDictionary collection has a fixed size.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Add(`0,`1)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.ContainsKey(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if key was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements IDictionary contains an element with the specified key; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>The element at the specified index.</value>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</returns>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</returns>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Item(`0)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key of the element to get or set.</param>
            <value></value>
            <returns>The element with the specified key.</returns>
            <exception cref="T:System.NotSupportedException">The property is set and the ordered dictionary is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.ArgumentNullException">The property is retrieved and the key is not found.</exception>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="P:IQ.Framework.Collections.Generic.OrderedDictionaryProxy`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:IQ.Framework.Collections.Generic.OrderedDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Collections.Generic.OrderedDictionary`2"/> class.
            </summary>
        </member>
        <member name="T:IQ.Framework.Utilities.Encryption">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Utilities.Encryption.INIT_VECTOR">
            <summary>
             Initialization Vector for the encryption algorithms
            </summary>
        </member>
        <member name="M:IQ.Framework.Utilities.Encryption.EncryptDES(System.String,System.String)">
            <summary>Encrypts a string using the DES encryption algorithm and the supplied key.</summary>
            <param name="vsSource">The string to encrypt.</param>
            <param name="vsKey">The key to use for encrypting.</param>
            <returns>An Encrypted string.</returns>
        </member>
        <member name="M:IQ.Framework.Utilities.Encryption.EncryptTripleDES(System.String,System.String)">
            <summary>Encrypts a string using the Triple DES encryption algorithm and the supplied key.</summary>
            <param name="vsSource">The string to encrypt.</param>
            <param name="vsKey">The key to use for encrypting.</param>
            <returns>An Encrypted string.</returns>
        </member>
        <member name="M:IQ.Framework.Utilities.Encryption.EncryptRC2(System.String,System.String)">
            <summary>Encrypts a string using the RC2 encryption algorithm and the supplied key.</summary>
            <param name="vsSource">The string to encrypt.</param>
            <param name="vsKey">The key to use for encrypting.</param>
            <returns>An Encrypted string.</returns>
        </member>
        <member name="M:IQ.Framework.Utilities.Encryption.EncryptRijndael(System.String,System.String)">
            <summary>Encrypts a string using the Rijndael Managed encryption algorithm and the supplied key.</summary>
            <param name="vsSource">The string to encrypt.</param>
            <param name="vsKey">The key to use for encrypting.</param>
            <returns>An Encrypted string.</returns>
        </member>
        <member name="M:IQ.Framework.Utilities.Encryption.DecryptDES(System.String,System.String)">
            <summary>Decrypts a string using the DES encryption algorithm and the supplied key.</summary>
            <param name="vsSource">The string to encrypt.</param>
            <param name="vsKey">The key to use for encrypting.</param>
            <returns>An Encrypted string.</returns>
        </member>
        <member name="M:IQ.Framework.Utilities.Encryption.DecryptTripleDES(System.String,System.String)">
            <summary>Decrypts a string using the Triple DES encryption algorithm and the supplied key.</summary>
            <param name="vsSource">The string to encrypt.</param>
            <param name="vsKey">The key to use for encrypting.</param>
            <returns>An Encrypted string.</returns>
        </member>
        <member name="M:IQ.Framework.Utilities.Encryption.DecryptRC2(System.String,System.String)">
            <summary>Decrypts a string using the RC2 encryption algorithm and the supplied key.</summary>
            <param name="vsSource">The string to encrypt.</param>
            <param name="vsKey">The key to use for encrypting.</param>
            <returns>An Encrypted string.</returns>
        </member>
        <member name="M:IQ.Framework.Utilities.Encryption.DecryptRijndael(System.String,System.String)">
            <summary>Decrypts a string using the Rijndael Managed encryption algorithm and the supplied key.</summary>
            <param name="vsSource">The string to encrypt.</param>
            <param name="vsKey">The key to use for encrypting.</param>
            <returns>An Encrypted string.</returns>
        </member>
        <member name="T:IQ.Framework.Exceptions.ArgumentException">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Exceptions.ArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ArgumentException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:IQ.Framework.Exceptions.ArgumentException.#ctor(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Exceptions.ArgumentException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:IQ.Framework.Globals">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Globals.RemotingServerNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Globals.RemotingServerNames.IQFramework">
            <summary>
            Defines the server name for IQ.Framework
            </summary>
        </member>
        <member name="F:IQ.Framework.Globals.RemotingServerNames.IQEnterpriseConnections">
            <summary>
            Defines the server name for the IQ.Enterprise.Connections service
            </summary>
        </member>
        <member name="T:IQ.Framework.Globals.ClientServerSettingsConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Globals.ClientServerSettingsConfiguration.SessionVariableName">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.RegularExpressions.RegExConstants">
            <summary>
            Provides a series of static regular expressions that can be used
            for validating user input
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Required">
            <summary>
            any single character except whitespace alone
            Pass: " x", "X", "            x    ", "x  x  xx xx x x "
            Fail "", " ", "\t" (tab), "\t\r" (return)
            </summary>
        </member>
        <member name="T:IQ.Framework.RegularExpressions.RegExConstants.Strings">
            <summary>
            A series of static regular expressions that can be used for
            validating the format of text.
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Strings.Email">
            <summary>
            a3.x_j7@some.isp.ca for example
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Strings.CanadPostalCode">
            <summary>
            H8H 8H8 or  H8H-8H8 or H8H8H8
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Strings.NoWhitespace">
            <summary>
            no spaces, tabs, returns, etc.  Anything else is OK
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Strings.AlphaNumericNoWhitespace">
            <summary>
            No spaces, tabs, returns or special chars
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Strings.AlphaNumericWhitespace">
            <summary>
            No special characters. White space and any alpha numeric is OK. 
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Strings.IPv4Address">
            <summary>
            IP Address in IPv4 format (aaa.bbb.ccc.ddd)
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Strings.HostName">
            <summary>
            Hostname format; xxx.yyy, where [xxx.] must occur at least once
            and yyy must be 2-4 characters in length.  
            This is valid:  my.host.name.is.long
            This is invalid: my.whoops
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Strings.InternetAddress">
            <summary>
            Combines IPv4Address and HostName into a singular, mutually exclusive RegEx
            </summary>
        </member>
        <member name="T:IQ.Framework.RegularExpressions.RegExConstants.Numbers">
            <summary>
            A series of static regular expressions that can be used for
            validating the format of numbers.
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.PositiveNonZeroInteger">
            <summary>
            A non-zero, positive integer
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.PostiveInteger">
            <summary>
            A positive integer, including 0
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.NegativeNonZeroInteger">
            <summary>
            A non-zero, negative integer
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.NegativeInteger">
            <summary>
            A negative integer, including 0
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.Integer">
            <summary>
            An integer
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.Decimal">
            <summary>
            A decimal value, positive or negative
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.NegativeDecimal">
            <summary>
            A negative decimal value
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.PostiveDecimal">
            <summary>
            A positive decimal value
            </summary>
        </member>
        <member name="P:IQ.Framework.RegularExpressions.RegExConstants.Numbers.Guid">
            <summary>
            A Guid value
            </summary>
        </member>
        <member name="T:IQ.Framework.IO.Compression.CompressionHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.IO.Compression.CompressionHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.IO.Compression.CompressionHelper"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.IO.Compression.CompressionHelper.CompressObject(System.Object)">
            <summary>
            Compresses the object.
            </summary>
            <param name="serializableObject">The serializable object.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.IO.Compression.CompressionHelper.DecompressObject(System.Byte[])">
            <summary>
            Decompresses the object.
            </summary>
            <param name="serializedBytes">The serialized bytes.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.IO.Compression.CompressionHelper.DecompressDataContract``1(System.Byte[])">
            <summary>
            Decompresses the object.
            </summary>
            <param name="serializedBytes">The serialized bytes.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.IO.Compression.CompressionHelper.ReadFullStream(System.IO.Stream)">
            <summary>
            Reads the full stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Messaging.IMessages">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Messaging.IMessages.HasMessages(IQ.Framework.Messaging.MessageTypeEnum)">
            <summary>
            Determines whether the specified invalid message type has messages.
            </summary>
            <param name="invalidMessageType">Type of the invalid message.</param>
            <returns>
            	<c>true</c> if the specified invalid message type has messages; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Messaging.IMessages.HasMessages">
            <summary>
            Determines whether this instance has messages.
            </summary>
            <returns>
            	<c>true</c> if this instance has messages; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Messaging.IMessages.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:IQ.Framework.Messaging.IMessages.Add(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Adds the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Messaging.IMessages.Add(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Adds the specified messages.
            </summary>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:IQ.Framework.Messaging.IMessages.Remove(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Removes the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Messaging.IMessages.Remove(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Removes the specified messages.
            </summary>
            <param name="messages">The messages.</param>
        </member>
        <member name="T:IQ.Framework.Messaging.MessageTypeEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Messaging.MessageTypeEnum.Information">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Messaging.MessageTypeEnum.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Messaging.MessageTypeEnum.Warning">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Messaging.MessageTypeEnum.Security">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Messaging.MessageTypeEnum.Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Messaging.MessageCollection">
            <summary>
            A collection of messages that are usefull for passing around messages 
            </summary>
        </member>
        <member name="M:IQ.Framework.Messaging.MessageCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Messaging.MessageCollection.HasMessages(IQ.Framework.Messaging.MessageTypeEnum)">
            <summary>
            Determines whether the specified invalid message type has messages.
            </summary>
            <param name="invalidMessageType">Type of the invalid message.</param>
            <returns>
            	<c>true</c> if the specified invalid message type has messages; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Messaging.MessageCollection.HasMessages">
            <summary>
            Determines whether this instance has messages.
            </summary>
            <returns>
            	<c>true</c> if this instance has messages; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Messaging.MessageCollection.Add(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Adds the specified messages.
            </summary>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:IQ.Framework.Messaging.MessageCollection.Remove(IQ.Framework.Messaging.MessageBase)">
            <summary>
            Removes the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:IQ.Framework.Messaging.MessageCollection.Remove(IQ.Framework.Messaging.MessageCollection)">
            <summary>
            Removes the specified messages.
            </summary>
            <param name="messages">The messages.</param>
        </member>
        <member name="T:IQ.Framework.Security.ContextData">
            <summary>
            This class contains information that is passed between tiers of an application
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.ContextData.GetParameter(System.String)">
            <summary>
            Gets the parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Security.ContextData.SetParameter(System.String,System.String)">
            <summary>
            Sets the parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:IQ.Framework.Security.ContextData.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.TestApplicationServiceFactory">
            <summary>
            The Application Service Factory used to generate and obtain Test Application Services, used for Unit Testing.
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.Application">
            <summary>
            Gets or sets the application.
            </summary>
            <value>The application.</value>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.ClientConfiguration">
            <summary>
            Gets or sets the client configuration.
            </summary>
            <value>The client configuration.</value>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.CacheList">
            <summary>
            Gets the cache list.
            </summary>
            <value>The cache list.</value>
        </member>
        <member name="P:IQ.Framework.Security.ContextData.Time">
            <summary>
            Gets the user's current local time.
            </summary>
        </member>
        <member name="T:IQ.Framework.Security.Clock">
            <summary>
            Class used to keep track of a user's local time.  Once the CurrentTime is set once, the clock will keep track of the elapsed
            time and return the time relative to what the CurrentTime was set to.
            <para>It is recommended to set the CurrentTime once every hour to keep it in sync with the desired time. You can either
            set the CurrentTime yourself at desired intervals, or use the SetFunctionToUseToUpdateCurrentTime() function to have this
            Clock call a given function at a desired interval to keep itself in sync.</para>
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.Clock.InvalidateClock">
            <summary>
            Invalidates the clock so it behaves as if the CurrentTime has not been set yet.
            If using a delegate function to automatically update the CurrentTime, this will force
            the CurrentTime to be updated the next time it is accessed.
            </summary>
        </member>
        <member name="F:IQ.Framework.Security.Clock._timeAtLastTimeUpdate">
            <summary>
            The time that was supplied the last the time CurrentTime was set.
            </summary>
        </member>
        <member name="F:IQ.Framework.Security.Clock._timeElapsedSinceLastTimeUpdate">
            <summary>
            The amount of time that has passed since the CurrentTime was last set.
            If this StopWatch is not running, it means that the user's CurrentTime hasn't been set even once yet.
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.Clock.SetFunctionToUseToUpdateCurrentTime(IQ.Framework.Security.Clock.FunctionToSetCurrentTime,System.Int32)">
            <summary>
            Sets the function to use to update the CurrentTime at specified intervals.
            This will also immediately update the CurrentTime using the given function.
            </summary>
            <param name="function">The function to call which will update the CurrentTime property.
            <para>If you don't want this Clock to update it's CurrentTime property automatically, set this to null.</para></param>
            <param name="minutesBetweenUpdates">The number of minutes between syncing the CurrentTime. This must be greater than zero.
            <para>It is recommended that the CurrentTime be set/synced once per hour, as it tends to go
            out-of-sync at a rate of about 0.25 seconds per hour.</para></param>
        </member>
        <member name="F:IQ.Framework.Security.Clock._syncTimeFunction">
            <summary>
            Pointer to a function which will update this object's CurrentTime.
            </summary>
        </member>
        <member name="F:IQ.Framework.Security.Clock._minutesBetweenSyncingTime">
            <summary>
            The number of minutes to wait between calling the _syncTimeFunction to update the CurrentTime.
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.Clock.CurrentTime">
            <summary>
            Gets or sets the user's current local time.
            If this CurrentTime has not been set yet, this simply returns the PC's time using DateTime.Now.
            <para>It is recommended that the CurrentTime be set/synced once per hour, as it tends to go
            out-of-sync at a rate of about 0.25 seconds per hour.</para>
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.Clock.CurrentTimeHasBeenInitialized">
            <summary>
            Returns if the CurrentTime has been set yet or not.
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.Clock.TimeSinceLastUpdate">
            <summary>
            Get how much time has elapsed since the CurrentTime was last updated/synced.
            </summary>
        </member>
        <member name="T:IQ.Framework.Security.Clock.FunctionToSetCurrentTime">
            <summary>
            Function prototype for a function which will update the Clock's CurrentTime.
            </summary>
        </member>
        <member name="T:IQ.Framework.Security.Impersonation">
            <summary>
            Impersonation - Use this Disposable class with a Using clause
            It will remember the current user and blank out the user after the
            constructor.  Once the class is disposed, the original user will be put
            back in.
            </summary>
        </member>
        <member name="T:IQ.Framework.Security.UserContext">
            <summary>
            Impersonation - Use this Disposable class with a Using clause
            It will remember the current user and blank out the user after the
            constructor.  Once the class is disposed, the original user will be put
            back in.
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.UserContext.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.UserContext"/> class.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:IQ.Framework.Security.UserContext.SetActive(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Sets the active user into the call context.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:IQ.Framework.Security.UserContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.Impersonation.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.Impersonation"/> class.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="T:IQ.Framework.Security.ISecurityUser">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.ISecurityUser.GetSessionVariable(System.String)">
            <summary>
            Gets the session variable.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Security.ISecurityUser.SetSessionVariable(System.String,System.String)">
            <summary>
            Sets the session variable.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:IQ.Framework.Security.ISecurityUser.Logout">
            <summary>
            Logouts this instance.
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.Password">
            <summary>
            Gets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.UserID">
            <summary>
            Gets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.Application">
            <summary>
            Gets the application.
            </summary>
            <value>The application.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.Environment">
            <summary>
            Gets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.Client">
            <summary>
            Gets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.ActivationKeyID">
            <summary>
            Gets or sets the activation key ID.
            </summary>
            <value>The activation key ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.ActivationKeyPassword">
            <summary>
            Gets or sets the activation key password.
            </summary>
            <value>The activation key password.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.MembershipUserID">
            <summary>
            Gets the membership user ID.
            </summary>
            <value>The membership user ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.SessionID">
            <summary>
            Gets or sets the session ID.
            </summary>
            <value>The session ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.UserStamp">
            <summary>
            Gets the user stamp.
            </summary>
            <value>The user stamp.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.IsAnonymous">
            <summary>
            Gets a value indicating whether this instance is anonymous.
            </summary>
            <value>
            	<c>true</c> if this instance is anonymous; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.Token">
            <summary>
            Gets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.Culture">
            <summary>
            Gets/sets the culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.LanguageCode">
            <summary>
            gets/sets the language code to be used when displaying translatable strings.  ex: en-us
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.DefaultLanguageCode">
            <summary>
            Gets/sets the default language code.  ex: en-us
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.contextData">
            <summary>
            Gets the context data.
            </summary>
            <value>The context data.</value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUser.Time">
            <summary>
            Gets the user's current local time.
            </summary>
        </member>
        <member name="T:IQ.Framework.Security.ISecurityUserMaintenance">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUserMaintenance.IsSessionDirty">
            <summary>
            Gets or sets a value indicating whether this instance is session dirty.
            </summary>
            <value>
            	<c>true</c> if this instance is session dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IQ.Framework.Security.ISecurityUserMaintenance.contextData">
            <summary>
            Gets or sets the context data.
            </summary>
            <value>The context data.</value>
        </member>
        <member name="T:IQ.Framework.Security.SecurityUser">
            <summary>
            
            </summary>
        </member>
        <member name="F:IQ.Framework.Security.SecurityUser.UseStaticUser">
            <summary>
            Set this to true if the CallContext doesn't seem to span multiple threads - DO NOT USE ON SERVER
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.SecurityUser"/> class using the contextData.
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.SecurityUser"/> class.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.#ctor(IQ.Framework.Security.ContextData)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.SecurityUser"/> class.
            </summary>
            <param name="contextData">The context data.</param>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.SecurityUser"/> class.
            </summary>
            <param name="culture">The culture.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="client">The client.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.SecurityUser"/> class.
            </summary>
            <param name="culture">The culture.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="client">The client.</param>
            <param name="token">The token.</param>
            <param name="environment">The environment.</param>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.SecurityUser"/> class.
            </summary>
            <param name="culture">The culture.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="client">The client.</param>
            <param name="token">The token.</param>
            <param name="environment">The environment.</param>
            <param name="application">The application.</param>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Security.SecurityUser"/> class.
            </summary>
            <param name="culture">The culture.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="client">The client.</param>
            <param name="token">The token.</param>
            <param name="environment">The environment.</param>
            <param name="application">The application.</param>
            <param name="version">The version.</param>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.GetSessionVariable(System.String)">
            <summary>
            Gets the session variable.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.SetSessionVariable(System.String,System.String)">
            <summary>
            Sets the session variable.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.Logout">
            <summary>
            Logouts this instance.
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.op_Equality(IQ.Framework.Security.SecurityUser,IQ.Framework.Security.SecurityUser)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="leftHandUser">The left hand user.</param>
            <param name="rightHandUser">The right hand user.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUser.op_Inequality(IQ.Framework.Security.SecurityUser,IQ.Framework.Security.SecurityUser)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="leftHandUser">The left hand user.</param>
            <param name="rightHandUser">The right hand user.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.contextData">
            <summary>
            Gets or sets the context data.
            </summary>
            <value>The context data.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.Token">
            <summary>
            Gets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.Client">
            <summary>
            Gets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.Environment">
            <summary>
            Gets the environment.
            </summary>
            <value>The environment.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.Password">
            <summary>
            Gets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.WorkstationID">
            <summary>
            Gets or sets the activation key ID.
            </summary>
            <value>The activation key ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.ActivationKeyID">
            <summary>
            Gets or sets the activation key ID.
            </summary>
            <value>The activation key ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.ActivationKeyPassword">
            <summary>
            Gets or sets the activation password.
            </summary>
            <value>The activation password.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.MembershipUserID">
            <summary>
            Gets or sets the membership user ID.
            </summary>
            <value>The membership user ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.UserStamp">
            <summary>
            Gets or sets the user stamp.
            </summary>
            <value>The user stamp.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.IsSessionDirty">
            <summary>
            Gets or sets a value indicating whether this instance is session dirty.
            </summary>
            <value>
            	<c>true</c> if this instance is session dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.SessionID">
            <summary>
            Gets or sets the session ID.
            </summary>
            <value>The session ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.IsAnonymous">
            <summary>
            Gets a value indicating whether this instance is anonymous.
            </summary>
            <value>
            	<c>true</c> if this instance is anonymous; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.Culture">
            <summary>
            Gets the culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.UserID">
            <summary>
            Gets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.Application">
            <summary>
            Gets the application.
            </summary>
            <value>The application.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:IQ.Framework.Security.SecurityUser.Time">
            <summary>
            Gets the user's current local time.
            </summary>
        </member>
        <member name="T:IQ.Framework.Security.SecurityUtility">
            <summary>
            Not to be used by developers
            </summary>
        </member>
        <member name="M:IQ.Framework.Security.SecurityUtility.GetContextData(System.Boolean)">
            <summary>
            Gets the context data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionXML">
            <summary>
            Used to re-wrap Exceptions so that they can be 
            properly serialized using an XmlSerializer.
            </summary>
        </member>
        <member name="M:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionXML.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionXML"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionXML.InnerException">
            <summary>
            Gets or sets the inner exception.
            </summary>
            <value>The inner exception.</value>
        </member>
        <member name="P:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionXML.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:IQ.Framework.Diagnostics.Contexts.Exceptions.ExceptionXML.StackTrace">
            <summary>
            Gets or sets the stack trace.
            </summary>
            <value>The stack trace.</value>
        </member>
        <member name="T:IQ.Framework.Serialization.XmlSerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Serialization.XmlSerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <returns>A string XML representing the instance</returns>
        </member>
        <member name="M:IQ.Framework.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Schema.XmlSchema)">
            <summary>
            Serializes the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="schema">The schema.</param>
            <returns>A string XML representing the instance</returns>
        </member>
        <member name="M:IQ.Framework.Serialization.XmlSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified XML.
            </summary>
            <param name="xml">The XML.</param>
            <returns>Class instance of the deserialized XML</returns>
        </member>
        <member name="M:IQ.Framework.Threading.BackgroundWorker.#ctor(IQ.Framework.Security.ISecurityUser)">
            <summary>
            Use this constructor when you want a specific user to run the background worker
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:IQ.Framework.Threading.BackgroundWorker.Invoke(System.Delegate,System.Object[])">
            <summary>
            Invokes a method on the main thread.
            </summary>
            <param name="method">The method to invoke.</param>
            <param name="args">The arguments to the method.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Threading.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:IQ.Framework.Threading.BackgroundWorker.HandleMethodInvoke(IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerInvokeContext)">
            <summary>
            Handles a method invoke.
            </summary>
            <param name="context">The method call context.</param>
        </member>
        <member name="P:IQ.Framework.Threading.BackgroundWorker.CurrentBackgroundWorker">
            <summary>
            Gets the currently running background worker.
            </summary>
            <value>The currently running background worker.</value>
        </member>
        <member name="T:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerThreadLinkHelper">
            <summary>
            A utility class so we can find a background worker by looking at the current thread's ID.
            </summary>
        </member>
        <member name="M:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerThreadLinkHelper.#ctor(IQ.Framework.Threading.BackgroundWorker)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerThreadLinkHelper"/> class.
            </summary>
            <param name="bw">The background worker to link to the current thread.</param>
        </member>
        <member name="M:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerThreadLinkHelper.Dispose">
            <summary>
            Removes this instance from the threads list when it is disposed
            </summary>
        </member>
        <member name="P:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerThreadLinkHelper.BackgroundWorker">
            <summary>
            Gets or sets the background worker.
            </summary>
            <value>The background worker.</value>
        </member>
        <member name="P:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerThreadLinkHelper.ManagedThreadId">
            <summary>
            Gets or sets the managed thread ID.
            </summary>
            <value>The managed thread ID.</value>
        </member>
        <member name="T:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerInvokeContext">
            <summary>
            Context of a delegate to be invoked on the main thread from this background worker.
            </summary>
        </member>
        <member name="M:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerInvokeContext.#ctor(System.Delegate,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerInvokeContext"/> class.
            </summary>
            <param name="method">The method to be invoked.</param>
            <param name="parameters">The parameters to be passed to the method.</param>
        </member>
        <member name="P:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerInvokeContext.Method">
            <summary>
            Gets or sets the method to be invoked.
            </summary>
            <value>The method to be invoked.</value>
        </member>
        <member name="P:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerInvokeContext.Parameters">
            <summary>
            Gets or sets the parameters to be passed to the method.
            </summary>
            <value>The parameters to be passed to the method.</value>
        </member>
        <member name="P:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerInvokeContext.ReturnValue">
            <summary>
            Gets or sets the return value of the method.
            </summary>
            <value>The return value of the method.</value>
        </member>
        <member name="P:IQ.Framework.Threading.BackgroundWorker.BackgroundWorkerInvokeContext.Exception">
            <summary>
            Gets or sets the exception thrown by the method.
            </summary>
            <value>The exception thrown by the method.</value>
        </member>
        <member name="T:IQ.Framework.Attributes.GlobalAttribute">
            <summary>
            GlobalAttribute DataRow
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttribute.WriteDBValue(System.Data.DataColumn,System.Object)">
            <summary>
             Write the value of the column back to the data row
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttribute.IsColumnModified(System.Data.DataColumn)">
            <summary>
             Is this column modified?
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttribute.TransferTo(System.Data.DataRow)">
            <summary>
            Transfers the data from this row to the target row based on the SourceColumnMappings.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttribute.TransferFrom(System.Data.DataRow)">
            <summary>
            Transfers the data from the target row to this row based on the SourceColumnMappings.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.Item(System.Data.DataColumn)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.Item(System.Int32)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.Item(System.String)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.Item(System.Int32,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.Item(System.String,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.ID">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.AttributeID">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.AttributeName">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.DataType">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.Table">
            <summary>
             Returns the typed object to which this object belongs
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.Modified">
             <summary>
             Determins if this object has been modified
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttribute.SourceColumnMappings">
            <summary>
             Returns the mapping array when this object is defined in the model from 
             another object
            </summary>
        </member>
        <member name="T:IQ.Framework.Attributes.GlobalAttributes">
            <summary>
            GlobalAttributes DataTable
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.#ctor">
            <summary>
             GlobalAttributes Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Serialized Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.#ctor(System.String)">
            <summary>
             GlobalAttributes Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.InitRelations(System.Data.DataSet)">
            <summary>
             Initialize relations for the dataset
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Select">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Select(System.String)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Select(System.String,System.String)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Select(System.String,System.String,System.Data.DataViewRowState)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.SelectSingleRow(System.String)">
            <summary>
             Select a single object based on the filter expression.  If more than one object
             is found, it will throw an exception
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.SelectSingleRow(System.String,System.Data.DataViewRowState)">
            <summary>
             Select a single object based on the filter expression.  If more than one object
             is found, it will throw an exception
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.NewDefaulted">
            <summary>
             New object that has default values
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Add">
            <summary>
             Add a new object to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Add(IQ.Framework.Attributes.GlobalAttribute)">
            <summary>
             Adds a new typed object to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.FindByID(System.Int32)">
            <summary>
             Finds the objects that are defined by the primary key(s)
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Clone">
            <summary>
             Clones this object structor and data
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Copy">
            <summary>
             Copies this object structor only
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.CreateInstance">
            <summary>
             Create a new instance of this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.New">
            <summary>
             Returns a new object but doesn't add it to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
             Create a new value from the builder (Internal mechansim)
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.GetRowType">
            <summary>
             Returns the type of the value (Internal mechanism)
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributes.Remove(IQ.Framework.Attributes.GlobalAttribute)">
            <summary>
             Removes an object from this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributes.IDColumn">
            <summary>
             Returns the defination of the ID Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributes.AttributeIDColumn">
            <summary>
             Returns the defination of the AttributeID Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributes.AttributeNameColumn">
            <summary>
             Returns the defination of the AttributeName Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributes.DataTypeColumn">
            <summary>
             Returns the defination of the DataType Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributes.Count">
            <summary>
             Returns the number of objects that are contained within this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributes.Item(System.Int32)">
            <summary>
             Indexer for this object
            </summary>
        </member>
        <member name="T:IQ.Framework.Attributes.GlobalAttributeValue">
            <summary>
            GlobalAttributeValue DataRow
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValue.WriteDBValue(System.Data.DataColumn,System.Object)">
            <summary>
             Write the value of the column back to the data row
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValue.IsColumnModified(System.Data.DataColumn)">
            <summary>
             Is this column modified?
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValue.TransferTo(System.Data.DataRow)">
            <summary>
            Transfers the data from this row to the target row based on the SourceColumnMappings.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValue.TransferFrom(System.Data.DataRow)">
            <summary>
            Transfers the data from the target row to this row based on the SourceColumnMappings.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Item(System.Data.DataColumn)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Item(System.Int32)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Item(System.String)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Item(System.Int32,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Item(System.String,System.Data.DataRowVersion)">
            <summary>
             
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.RowID">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.AttributeID">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Value">
            <summary>
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Table">
            <summary>
             Returns the typed object to which this object belongs
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.Modified">
             <summary>
             Determins if this object has been modified
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValue.SourceColumnMappings">
            <summary>
             Returns the mapping array when this object is defined in the model from 
             another object
            </summary>
        </member>
        <member name="T:IQ.Framework.Attributes.GlobalAttributeValues">
            <summary>
            GlobalAttributeValues DataTable
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.#ctor">
            <summary>
             GlobalAttributeValues Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Serialized Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.#ctor(System.String)">
            <summary>
             GlobalAttributeValues Constructor
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.InitRelations(System.Data.DataSet)">
            <summary>
             Initialize relations for the dataset
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Select">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Select(System.String)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Select(System.String,System.String)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Select(System.String,System.String,System.Data.DataViewRowState)">
            <summary>
             Select an array of objects that match the filter expression provided
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.SelectSingleRow(System.String)">
            <summary>
             Select a single object based on the filter expression.  If more than one object
             is found, it will throw an exception
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.SelectSingleRow(System.String,System.Data.DataViewRowState)">
            <summary>
             Select a single object based on the filter expression.  If more than one object
             is found, it will throw an exception
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.NewDefaulted">
            <summary>
             New object that has default values
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Add">
            <summary>
             Add a new object to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Add(IQ.Framework.Attributes.GlobalAttributeValue)">
            <summary>
             Adds a new typed object to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.FindByRowIDAttributeID(System.Guid,System.Guid)">
            <summary>
             Finds the objects that are defined by the primary key(s)
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Clone">
            <summary>
             Clones this object structor and data
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Copy">
            <summary>
             Copies this object structor only
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.CreateInstance">
            <summary>
             Create a new instance of this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.New">
            <summary>
             Returns a new object but doesn't add it to this object
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
             Create a new value from the builder (Internal mechansim)
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.GetRowType">
            <summary>
             Returns the type of the value (Internal mechanism)
            </summary>
        </member>
        <member name="M:IQ.Framework.Attributes.GlobalAttributeValues.Remove(IQ.Framework.Attributes.GlobalAttributeValue)">
            <summary>
             Removes an object from this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValues.RowIDColumn">
            <summary>
             Returns the defination of the RowID Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValues.AttributeIDColumn">
            <summary>
             Returns the defination of the AttributeID Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValues.ValueColumn">
            <summary>
             Returns the defination of the Value Column
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValues.Count">
            <summary>
             Returns the number of objects that are contained within this object
            </summary>
        </member>
        <member name="P:IQ.Framework.Attributes.GlobalAttributeValues.Item(System.Int32)">
            <summary>
             Indexer for this object
            </summary>
        </member>
        <member name="T:IQ.Framework.Utilities.DateUtilities">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Utilities.DateUtilities.RoundToSeconds(System.DateTime)">
            <summary>
            Rounds to seconds.
            </summary>
            <param name="dt">The dt.</param>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Utilities.DateUtilities.SystemDateNow">
            <summary>
            Gets the system date now.
            </summary>
            <value>The system date now.</value>
        </member>
        <member name="P:IQ.Framework.Utilities.DateUtilities.UTCSystemDateNow">
            <summary>
            Gets the UTC system date now.
            </summary>
            <value>The UTC system date now.</value>
        </member>
        <member name="P:IQ.Framework.Utilities.DateUtilities.SystemDateToday">
            <summary>
            Gets the system date today.
            </summary>
            <value>The system date today.</value>
        </member>
        <member name="P:IQ.Framework.Utilities.DateUtilities.MinSqlDate">
            <summary>
            Gets the min SQL date.
            </summary>
            <value>The min SQL date.</value>
        </member>
        <member name="T:IQ.Framework.Windows.FormBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.FormBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Windows.FormBase"/> class.
            </summary>
        </member>
        <member name="F:IQ.Framework.Windows.FormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.FormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IQ.Framework.Windows.FormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:IQ.Framework.Windows.IApplication">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.IApplication.Login">
            <summary>
            Logins this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Windows.IApplication.WinStatus">
            <summary>
            Gets the win status.
            </summary>
            <value>The win status.</value>
        </member>
        <member name="T:IQ.Framework.Windows.Patterns.ModelViewController.FormBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Windows.Patterns.ModelViewController.IForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.IForm.Initialize(IQ.Framework.Patterns.ModelViewController.IModel)">
            <summary>
            Initialize the form and pass in the model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.IForm.SetError(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the error to the Error Provider
            </summary>
            <param name="control">The control.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.IForm.GetError(System.Windows.Forms.Control)">
            <summary>
            Gets the error from the Error Provider
            </summary>
            <param name="control">The control.</param>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.IForm.Messages">
            <summary>
            Get the message viewer
            </summary>
        </member>
        <member name="T:IQ.Framework.Windows.Patterns.ModelViewController.IFactoryForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.FormBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Windows.Patterns.ModelViewController.FormBase"/> class.
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.FormBase.Initialize(IQ.Framework.Patterns.ModelViewController.IModel)">
            <summary>
            Initialize the form and pass in the model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="F:IQ.Framework.Windows.Patterns.ModelViewController.FormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.FormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.FormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:IQ.Framework.Windows.Patterns.ModelViewController.FormBase._viewPanel">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.FormBase.Messages">
            <summary>
            Get the message viewer
            </summary>
            <value></value>
        </member>
        <member name="T:IQ.Framework.Windows.IWinStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.IWinStatus.SetProgress(System.Int32,System.Int32)">
            <summary>
            Sets the progress.
            </summary>
            <param name="progress">The progress.</param>
            <param name="maxProgress">The max progress.</param>
        </member>
        <member name="P:IQ.Framework.Windows.IWinStatus.StatusText">
            <summary>
            Gets or sets the status text.
            </summary>
            <value>The status text.</value>
        </member>
        <member name="P:IQ.Framework.Windows.IWinStatus.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:IQ.Framework.Windows.IWinStatus.Progress">
            <summary>
            Gets or sets the progress.
            </summary>
            <value>The progress.</value>
        </member>
        <member name="F:IQ.Framework.Windows.Patterns.ModelViewController.ModalDialogBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ModalDialogBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ModalDialogBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:IQ.Framework.Windows.Patterns.ModelViewController.FormFactory`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.FormFactory`1.Create(IQ.Framework.Patterns.ModelViewController.IModel)">
            <summary>
            Creates the specified model.
            </summary>
            <param name="model">The model.</param>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Windows.Patterns.ModelViewController.ILayout">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ILayout.IsReady">
            <summary>
            Gets or sets a value indicating whether this instance is ready.
            </summary>
            <value><c>true</c> if this instance is ready; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:IQ.Framework.Windows.Patterns.ModelViewController.IView">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.IView.InitializeView(IQ.Framework.Patterns.ModelViewController.IModel)">
            <summary>
            Initializes the view.
            </summary>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.IView.AcceptButton">
            <summary>
            Gets or sets the accept button.
            </summary>
            <value>The accept button.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.IView.CancelButton">
            <summary>
            Gets or sets the cancel button.
            </summary>
            <value>The cancel button.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.IView.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.IView.Controls">
            <summary>
            Gets the controls.
            </summary>
            <value>The controls.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.IView.AllControls">
            <summary>
            Gets all controls
            </summary>
            <value>All controls.</value>
        </member>
        <member name="T:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.IsReadyChanged(System.Boolean)">
            <summary>
            Property to provide a mechansim to enable / disable events from firing (if used).  
            Also provides a mechansim to override in a userControl to notify the view that ready has changed (IsReadyChanged)
            It is set initially set to false until the .Show is complete.
            </summary>
            <param name="vbIsReady">New value for IsReady</param>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.ReadOnlyChanged(System.Boolean)">
            <summary>
            Fired when the read only flag changes
            </summary>
            <param name="vbReadOnly">if set to <c>true</c> [vb read only].</param>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.InitializeView(IQ.Framework.Patterns.ModelViewController.IModel)">
            <summary>
            Initializes the view.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.InitializeValidations">
            <summary>
            Initializes the validations.
            Called just before ValidateForm
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.ValidateView">
            <summary>
            Validates the form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.MoveDataToView">
            <summary>
            Moves the data to UI.
            Put all logic in here to move information from the Model to the User Interface.
            Called just before Show
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.MoveDataToModel">
            <summary>
            Moves the data to model.
            Put all logic in here to move data from the UI back to the Model
            Called when ValidateForm returns True (ie No Errors)
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.SaveView(IQ.Framework.Messaging.MessageTypeEnum)">
            <summary>
            Saves the View.
            Calls the Validate View.  
            If returns true calls MoveDataToModel.  
            If returns true if no errors
            </summary>
            <returns></returns>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.AcceptButton">
            <summary>
            Gets or sets the accept button.
            </summary>
            <value>The accept button.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.CancelButton">
            <summary>
            Gets or sets the cancel button.
            </summary>
            <value>The cancel button.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.UserControlMode">
            <summary>
            Gets or sets the user control mode.
            </summary>
            <value>The user control mode.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.Controller">
            <summary>
            Gets the Controller for the View
            </summary>
            <value>The controller.</value>
            <returns>The <see cref="T:System.Windows.Forms.Form"></see> that the container control is assigned to.</returns>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.IsReady">
            <summary>
            Gets or sets a value indicating whether this instance is ready.
            </summary>
            <value><c>true</c> if this instance is ready; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value><c>true</c> if [read only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.Messages">
            <summary>
            Gets the message viewer.
            </summary>
            <value>The message viewer.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.AllControls">
            <summary>
            Gets a collection of all the controls on the usercontrol.  
            It pulls back ALL controls, even those that are nested in other controls. (ie it's recursive)
            </summary>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.ViewBase.IsModified">
            <summary>
            Gets or sets a value indicating whether this instance is modified.
            </summary>
            <value>
            	<c>true</c> if this instance is modified; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.InitializeViewsValidations">
            <summary>
            Calls the IntializeValidations on all child user controls on the form
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.ValidateViews">
            <summary>
            Validates the views.
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.SaveViews(IQ.Framework.Messaging.MessageTypeEnum)">
            <summary>
            Calls the SaveModel method on all views that implement IController
            </summary>
            <param name="invalidMessageType">The types of messages that will cause the save to fail.</param>
            <returns></returns>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.MoveDataToView">
            <summary>
            Moves the data to UI.
            Put all logic in here to move information from the Model to the User Interface.
            Called just before Show
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.MoveDataToModel">
            <summary>
            Moves the data to model.
            Put all logic in here to move data from the UI back to the Model
            Called when ValidateForm returns True (ie No Errors)
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.InitializeViews(IQ.Framework.Patterns.ModelViewController.IModel)">
            <summary>
            Initializes the views.
            </summary>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.AcceptButton">
            <summary>
            Gets or sets the accept button.  Will attempt to use any view's accept button if not set in layout.
            </summary>
            <value>The accept button.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.CancelButton">
            <summary>
            Gets or sets the cancel button.  Will attempt to use any views cancel button if not set in layout.
            </summary>
            <value>The cancel button.</value>
        </member>
        <member name="P:IQ.Framework.Windows.Patterns.ModelViewController.LayoutBase.Views">
            <summary>
            Returns all the views.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:IQ.Framework.Windows.WinStatus">
            <summary>
            Class to assist with providing status on the main form.  Implements IDisposable so that it can be used
            in a using statement.  It adjusts the cursor, provides an interface for a progress bar and adjusts
            the text in the status bar area.  Once it get's disposed, it will put the status bar, progress bar and cursor back
            to it's original state.
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.WinStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Windows.WinStatus"/> class.
            </summary>
            <param name="statusText">The status text.</param>
        </member>
        <member name="M:IQ.Framework.Windows.WinStatus.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:IQ.Framework.Windows.WinStatus"/> class.
            </summary>
            <param name="statusText">The status text.</param>
            <param name="maxProgress">The max progress.</param>
        </member>
        <member name="M:IQ.Framework.Windows.WinStatus.SetProgress(System.Int32,System.Int32)">
            <summary>
            Sets the progress.
            </summary>
            <param name="progress">The progress.</param>
            <param name="maxProgress">The max progress.</param>
        </member>
        <member name="M:IQ.Framework.Windows.WinStatus.SetStatus(IQ.Framework.Windows.IWinStatus,System.String,System.Int32,System.Int32)">
            <summary>
            Sets the status
            </summary>
            <param name="statusObject">The status object.</param>
            <param name="statusText">The status text.</param>
            <param name="progress">The progress.</param>
            <param name="maxProgress">The max progress.</param>
        </member>
        <member name="M:IQ.Framework.Windows.WinStatus.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:IQ.Framework.Windows.WinStatus.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:IQ.Framework.Windows.WinStatus.StatusText">
            <summary>
            Gets or sets the status text.
            </summary>
            <value>The status text.</value>
        </member>
        <member name="P:IQ.Framework.Windows.WinStatus.Cursor">
            <summary>
            Incase the user want's to change the cursor in the middle of a status
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:IQ.Framework.Windows.WinStatus.Progress">
            <summary>
            Gets or sets the progress.
            </summary>
            <value>The progress.</value>
        </member>
        <member name="T:IQ.Framework.Windows.WinStatusManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:IQ.Framework.Windows.WinStatusManager.StatusTarget">
            <summary>
            Gets or sets the status target.
            </summary>
            <value>The status target.</value>
        </member>
    </members>
</doc>
